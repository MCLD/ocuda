@model Ocuda.Promenade.Controllers.ViewModels.Locations.LocationViewModel

<h1>Locations</h1>

@if (Model.CanSearchAddress)
{
    <div class="row">
        <div class="col-12 mb-2">
            <form asp-action="@nameof(LocationsController.Find)"
                  method="get"
                  role="form">
                <div class="input-group">
                    <input asp-for="Zip"
                           placeholder="Enter your ZIP Code to find your closest library"
                           class="form-control default-text" />
                    <div class="input-group-append">
                        <button class="btn btn-primary">
                            Go
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="row d-block d-sm-none">
        <div class="col-12 mb-2">
            <form asp-action="Location" method="get" role="form" id="GeoForm">
                <input asp-for="Latitude" id="Latitude" hidden />
                <input asp-for="Longitude" id="Longitude" hidden />
                <button type="button"
                        class="btn btn-outline-primary btn-block"
                        id="GeoButton">
                    <span class="fas fa-map-marker-alt"></span>
                    Use my location
                </button>
            </form>
        </div>
    </div>
}

<div class="row">
    @if (Model?.Locations?.Count > 0)
    {
        @foreach (var location in Model.Locations)
        {
            <div class="col-12 col-md-6 col-lg-4 mt-2 mb-3 d-flex">
                <div class="prom-location-tile flex-fill w-100">
                    @if (!string.IsNullOrEmpty(location.MapLink)
                 && !string.IsNullOrEmpty(location.MapImagePath))
                    {
                        <a href="@location.MapLink">
                            <img src="@location.MapImagePath"
                                 class="img-fluid"
                                 style="width: 100%;" />
                        </a>
                    }
                    <div class="status-bar @(location.CurrentStatus.IsCurrentlyOpen ? "bg-success" : "bg-danger")">&nbsp;</div>
                    <div class="px-3 pt-2 pb-3">
                        <span class="h3">
                            @if (!string.IsNullOrWhiteSpace(location.LocatorName))
                            {
                                @Html.Raw(location.LocatorName)
                            }
                            else
                            {
                                @location.Name
                            }
                        </span>
                        <em>
                            @if (location.Distance != 0)
                            {
                                <text>(@location.Distance mi.)</text>
                            }
                        </em>
                        <p class="mb-1">
                            @location.Address<br />
                            @location.City
                            @location.State,
                            @location.Zip
                        </p>
                        <p class="@(location.CurrentStatus.IsCurrentlyOpen ? "text-success" : "text-danger")">
                            <strong>@location.CurrentStatus.StatusMessage</strong>
                        </p>
                        <div class="row">
                            <div class="col-6">
                                <a asp-action="@nameof(LocationsController.Locations)"
                                   asp-route-locationStub="@location.Stub"
                                   class="btn btn-outline-dark">
                                    Details
                                </a>

                            </div>
                            <div class="col-6 text-right">
                                @if (location.HasEvents)
                                {
                                    <a href="@location.EventLink"
                                       class="btn btn-outline-dark">
                                        Events
                                    </a>
                                }
                                else
                                {
                                    <em class="text-dark align-middle">@location.LocatorNotes</em>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <script>
            var noResults = true;
        </script>
    }
</div>

@section scripts {
    <script>
        var useMyLocation = 'Use my location';

        $().ready(function () {
            if (location.protocol != 'https:' && location.hostname != 'localhost') {
                location.href = 'https:' + window.location.href.substring(window.location.protocol.length);
            }
            $('#GeoButton').html(useMyLocation);
            $('#GeoButton').show();
        });

        var geoSuccess = function (position) {
            $('#Latitude').val(position.coords.latitude);
            $('#Longitude').val(position.coords.longitude);
            $('#GeoForm').submit();
        }

        var geoFailure = function (error) {
            $('#GeoButton').html(useMyLocation);
            $('#GeoButton').prop('disabled', false);
            alert('There was a problem determining your location.');
            console.log(error.message);
        }

        $('#GeoButton').on('click', function () {
            $('#GeoButton').html('<span class="fa fa-spinner fa-spin"></span> ' + useMyLocation);
            $('#GeoButton').prop('disabled', true);
            var geoOptions = {
                enableHighAccuracy: true,
                maximumAge: 30000,
                timeout: 27000
            };
            navigator.geolocation.getCurrentPosition(geoSuccess, geoFailure, geoOptions);
        });
    </script>
}
