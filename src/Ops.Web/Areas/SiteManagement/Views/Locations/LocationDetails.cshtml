@model Ocuda.Ops.Controllers.Areas.SiteManagement.ViewModels.Location.LocationViewModel
@section styles{
    <link rel="stylesheet" href="~/css/md.min.css" asp-append-version="true" />
}
<div class="modal fade" id="listAddModal" tabindex="-1" role="dialog" aria-labelledby="listModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="row">
            <div class="col-12 col-sm-10 col-sm-offset-1">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addModalTitle"></h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="modalItemList" class="col-12">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" style="margin-right: 1em;">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="itemEditModal" tabindex="-1" role="dialog" aria-labelledby="listModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="row">
            <div class="col-12 col-sm-10 col-sm-offset-1">
                <form method="post" role="form" id="updateItem" asp-controller="@LocationsController.Name" asp-action="@nameof(LocationsController.EditLocationFeature)" novalidate="novalidate">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editModalTitle">Edit Feature</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div id="modalItemInfo" class="col-12 col">

                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal" style="margin-right: 1em;">Cancel</button>
                            <button type="submit" value="Submit" class="btn btn-primary" style="margin-right: 1em;">Save</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="listModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="row">
            <div class="col-12 col-sm-10 col-sm-offset-1">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalTitle"></h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" style="margin-right: 1em;">Cancel</button>
                        <button type="button" class="btn btn-danger" data-dismiss="modal" style="margin-right: 1em;">
                            <span class="buttonText">Delete</span>
                            <span class="fa fa-spinner fa-pulse fa-lg fa-fw d-none"></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="location-save-container">
    <div class="location-save-message"></div>
</div>

@if (Model.Location.IsNewLocation)
{
    <div class="row page-title">
        <div class="col-12">
            <h1>@(Model.Location.IsNewLocation ? "Add Location" : "Edit " + Model.Location.Name)</h1>
        </div>
    </div>
}
else
{
    @await Html.PartialAsync("_LocationPartial")
}


<form method="post"
      asp-controller="@LocationsController.Name"
      asp-action="@Model.Action"
      role="form"
      display="inline">
    <input asp-for="GroupList" type="hidden" />
    <input asp-for="FeatureList" type="hidden" />
    <input value="@Model.Location.Id"
           asp-for="Location.Id"
           id="location-id"
           type="hidden" />
    <input value="@Model.Location.Name"
           asp-for="Location.Name"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.Stub"
           asp-for="Location.Stub"
           info-tooltip="The stub is the nickname/URL for the location."
           on-blur-js="FormatStub"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.Code"
           asp-for="Location.Code"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.Address"
           asp-for="Location.Address"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.City"
           asp-for="Location.City"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.State"
           asp-for="Location.State"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.Zip"
           asp-for="Location.Zip"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.MapLink"
           asp-for="Location.MapLink"
           formgroup
           autocomplete="off" />
    <input type="tel"
           value="@Model.Location.Phone"
           asp-for="Location.Phone"
           formgroup
           autocomplete="off" />
    <select asp-for="Location.DescriptionSegmentId"
            asp-items="@Model.PostFeatSegments"
            formgroup>
        <option value="">None</option>
    </select>
    <select asp-for="Location.PreFeatureSegmentId"
            asp-items="@Model.PreFeatSegments"
            formgroup>
        <option value="">None</option>
    </select>
    <select asp-for="Location.PostFeatureSegmentId"
            asp-items="@Model.PostFeatSegments"
            formgroup>
        <option value="">None</option>
    </select>
    <input value="@Model.Location.Facebook"
           asp-for="Location.Facebook"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.EventLink"
           asp-for="Location.EventLink"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.SubscriptionLink"
           asp-for="Location.SubscriptionLink"
           formgroup
           autocomplete="off" />
    <h3>Stuctured Data</h3>
    <input value="@Model.Location.AdministrativeArea"
           asp-for="Location.AdministrativeArea"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.Type"
           asp-for="Location.Type"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.AreaServedName"
           asp-for="Location.AreaServedName"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.AreaServedType"
           asp-for="Location.AreaServedType"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.Email"
           asp-for="Location.Email"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.AddressType"
           asp-for="Location.AddressType"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.ContactType"
           asp-for="Location.ContactType"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.ParentOrganization"
           asp-for="Location.ParentOrganization"
           formgroup
           autocomplete="off" />
    <div class="row form-group">
        <label class="col-form-label text-md-right col-md-3">
            Is Accessible For Free?
        </label>
        <div class="flex-md-grow-0">
            <div class="custom-control custom-switch">
                <input type="checkbox"
                       class="custom-control-input switch"
                       asp-for="Location.IsAccessibleForFree"
                       value="@Model.Location.IsAccessibleForFree.ToString().ToLower()"
                       id="isAccessibleForFree" />
                <label class="col-form-label text-md-right col-md-3 custom-control-label text-hide" for="isAccessibleForFree"></label>
            </div>
        </div>
    </div>
    <input value="@Model.Location.PriceRange"
           asp-for="Location.PriceRange"
           formgroup
           autocomplete="off" />
    <div class="row">
        <div class="col-md-9 offset-md-3">
            <a class="btn btn-secondary"
               id="return-home"
               asp-action="@nameof(LocationsController.Index)">Return to Locations</a>
            @if (Model.Location.IsNewLocation)
            {
                <text>
                    <button type="submit"
                            id="submit"
                            value="Submit"
                            class="btn btn-success"
                            button-spinner>
                        <span class="buttonText">Add Location</span>
                    </button>
                </text>
            }
            else
            {
                <text>
                    <button type="submit"
                            id="submit"
                            value="Submit"
                            class="btn btn-success"
                            button-spinner>
                        <span class="buttonText">Update Location</span>
                    </button>
                </text>
            }
        </div>
    </div>
    @if (!Model.Location.IsNewLocation)
    {
        <div class="col-6 card">
            <div class="card-header">
                <h4 style="margin: 0; display: initial;">Features</h4>
                <button type="button"
                        class="btn btn-warning addItemButtonModal"
                        data-itemType="Feature"
                        style="float:right;">
                    Add Feature
                </button>
            </div>
            @if (Model.LocationFeatures.Any())
            {
                <table class="table table-sm table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Custom Text</th>
                            <th>Redirect URL</th>
                            <th>Open in new tab</th>
                            <th width="44px">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody id="featureList">
                        @foreach (var locationFeature in Model.LocationFeatures)
                        {
                            @foreach (var feature in Model.Features.Where(_ => _.Id == locationFeature.FeatureId))
                            {
                                <tr>
                                    <td class="td-class edit-item"
                                        data-itemName="@feature.Name"
                                        data-itemtype="Feature"
                                        data-itemid="@locationFeature.FeatureId">
                                        @feature.Name
                                    </td>
                                    <td style="vertical-align:middle;">
                                        @if (!string.IsNullOrEmpty(locationFeature.Text))
                                        {
                                            @if (locationFeature.Text.Length > 200)
                                            {
                                                @(locationFeature.Text.Substring(0, 200) + "...")
                                            }
                                            else
                                            {
                                                @locationFeature.Text
                                            }
                                        }
                                    </td>
                                    <td style="vertical-align:middle;">@locationFeature.RedirectUrl</td>
                                    <td style="vertical-align:middle">@(locationFeature.NewTab ? "Yes" : "No")</td>
                                    <td>
                                        <button type="button"
                                                class="btn btn-link btn-xs deleteItemButton"
                                                data-itemType="Feature"
                                                data-itemId="@locationFeature.FeatureId"
                                                data-itemName="@feature.Name">
                                            <span class="fa fa-2x fas fa-minus-circle text-danger"
                                                  aria-hidden="true"></span>
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            }
            else
            {
                @:<ul class="list-group" id="nofeatures"><li class="list-group-item">No Features</li></ul>
            }
        </div>
        <div class="col-6 card">
            <div class="card-header">
                <h4 style="margin: 0; display: initial;">Groups</h4>
                <button type="button"
                        class="btn btn-warning addItemButtonModal"
                        data-toggle="modal"
                        style="float:right;"
                        data-itemType="Group">
                    Add Group
                </button>
            </div>
            @if (Model.LocationGroups.Any())
            {
                <table class="table table-sm table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Group Type</th>
                            <th>Location Region?</th>
                            <th>Location's Map Group</th>
                            <th width="44px">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody id="groupList">
                        @foreach (var locationGroup in Model.LocationGroups)
                        {
                            @foreach (var group in Model.Groups.Where(_ => _.Id == locationGroup.GroupId))
                            {
                                <tr>
                                    <td style="vertical-align:middle;"
                                        class="edit-item"
                                        data-itemName="@group.GroupType"
                                        data-itemtype="Group"
                                        data-itemid="@locationGroup.GroupId">
                                        @group.GroupType
                                    </td>
                                    @if (group.IsLocationRegion)
                                    {
                                        <td class="text-center"
                                            style="vertical-align:middle;">
                                            <span class="fas fa-check"></span>
                                        </td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                    <td class="text-center"
                                        style="vertical-align:middle;">
                                        @if (Model.Location.DisplayGroupId == group.Id)
                                        {
                                            <text>
                                                <span class="fas fa-check"></span>
                                            </text>
                                        }
                                    </td>
                                    <td>
                                        <button type="button"
                                                class="btn btn-link btn-xs deleteItemButton"
                                                data-itemType="Group"
                                                data-itemId="@locationGroup.GroupId"
                                                data-itemName="@group.GroupType">
                                            <span class="fa fa-2x fas fa-minus-circle text-danger"
                                                  aria-hidden="true"></span>
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            }
            else
            {
                @:<ul class="list-group" id="noGroups"><li class="list-group-item">No Groups</li></ul>
            }
        </div>
    }
</form>

@section scripts{
    <script src="~/js/md.min.js" asp-append-version="true"></script>
    <script>

        function FormatStub(object) {
            updateStub($(object), $(object).val());
        }
        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
            var ulMapList = document.createElement("ul");
            ulMapList.classList.add("list-group");
            ulMapList.setAttribute("id", "maplink-suggestions");
            $($("#Location_Address").parent()).append(ulMapList);
        });

        $(document).on("click", ".switch", function(e){
            if ($(this).val().toLowerCase() == "true") {
                $(this).val("false");
            }
            else {
                $(this).val("true");
            }
        });

        @if (!Model.Location.IsNewLocation)
        {
            <text>
        // Helpers
            function GetItemList(objType) {
                $("#listAddModal").modal("show");
                $.get("@Url.Action(nameof(LocationsController.GetItemsList))",
                    {
                        objectType: objType,
                        page: 1
                    }, function (response) {
                        $("#modalItemList").html(response);
                });
            }
            $(document).on('click', "button.page-link", function (e) {
                $.get("@Url.Action(nameof(LocationsController.GetItemsList))",
                {
                    objectType: $("#addModalTitle").data("objType"),
                    page: $(this).data("page")
                }, function(response) {
                    $("#modalItemList").html(response);
                });
            });

            //Adding an Item
            $(".addItemButtonModal").on('click', function (e) {
                $("#addModalTitle").text("Add a " + $(this).data("itemtype"));
                $("#addModalTitle").attr("data-objType", $(this).data("itemtype"));
                $("#listAddModal").modal("show");
                GetItemList($(this).data("itemtype"));
            });

            $(document).on("click", ".additemButton", function () {
                $(".additemButton").addClass("disabled");
                var url = "";
                if ($(this).data("itemtype") == "Group") {
                    url = "@Url.Action(nameof(LocationsController.CreateLocationGroup))";
                } else {
                    url = "@Url.Action(nameof(LocationsController.CreateLocationFeature))";
                }

                $.post(url,
                    {
                        locationId: @Model.Location.Id,
                        itemId: $(this).data("itemid"),
                    }, function () {
                        $("#listAddModal").modal('hide');
                        window.location.reload();
                });
            });

            // Editing an Item
            function GetEditInfo(item, objType) {
                if (objType != "Group" && objType != "Feature") {
                    item = 0;
                }
                $.get("@Url.Action(nameof(LocationsController.GetItemInfo))",
                    {
                        itemId: item,
                        objectType: objType,
                        locationStub: "@Model.Location.Stub"
                    }, function (response) {
                        $("#modalItemInfo").html(response);
                }).done(function () {
                    if (objType == "Feature" && typeof Markdown != "undefined") {
                        var editor = new Markdown.Editor({ allowUploads: false });
                        editor.run();
                    }
                    });
            }

            $("#updateItem").on("hidden.bs.modal", function () {
                $("#updateItem").find(".modal-body").html("");
            });

            $("#updateItem").submit(function() {
                if ($("#updateItem").attr("name") == "Hour" && !$("#accordion-header").hasClass("bg-info")) {
                    $("#Group_SubscriptionUrl").val("");
                    $("#group-isLocationRegion").val("False");
                }
            });
            $(".edit-item").on('click', function (e) {
                var url = "";
                if ($(this).data("itemtype") == "Feature") {
                    url = "@Url.Action(nameof(LocationsController.EditLocationFeature),LocationsController.Name)";
                    $("#editModalTitle").text("Edit Feature: " + $(this).data("itemname"));

                }
                else {
                    url = "@Url.Action(nameof(LocationsController.EditLocationGroup),LocationsController.Name)"
                    $("#editModalTitle").text("Edit Group: " + $(this).data("itemname"));

                }

                $("#itemEditModal").modal("show");
                $('#updateItem').attr('name', $(this).data("itemtype"));
                $("#updateItem").attr("action",url);
                GetEditInfo($(this).data("itemid"), $(this).data("itemtype"));
            });

            //Updating Delete Modal
            $('.deleteItemButton').on('click', function () {
                $($("#deleteModal").find("button.btn-danger")).attr("data-itemid",$(this).data("itemid").toString());
                $($("#deleteModal").find("button.btn-danger")).attr("id", "confirmDelete" + $(this).data("itemtype").toString())
                $("#deleteModalTitle").text("Delete @Model.Location.Name's "+ $(this).data("itemtype") + ": " + $(this).data("itemname"));
                $("#deleteModal").find(".modal-body").html("Are you sure you want to remove the "+ $(this).data("itemtype") + " '<strong>" + $(this).data("itemname") + "</strong>' from '<strong>@Model.Location.Name</strong>'")
                $("#deleteModal").modal("show");
            });

            $(document).on('click', "#confirmDeleteGroup", function () {
                DeleteLocationObject($(this).data('itemid'), "@Url.Action(nameof(LocationsController.DeleteLocationGroup))")
            });
            $(document).on('click', "#confirmDeleteFeature", function () {
                DeleteLocationObject($(this).data('itemid'), "@Url.Action(nameof(LocationsController.DeleteLocationFeature))")
            });

            function DeleteLocationObject(itemId, url) {
                $.post(url,
                    {
                        itemId: itemId,
                        locationId: @Model.Location.Id
                    }, function () {
                        $("#deleteModal").modal('hide');
                        window.location.reload();
                    });
            }
            </text>
    }
    // For Google Maps
    $(document).on('click','#maplink-suggestions li', function () {
        var urlstring = $(this).find("a").data("maps-url");
        var address = $(this).find("span.format-addr").text().split(", ");
        if (address.length == 5) {
            $("#Location_Address").val(address[1]);
            $("#Location_City").val(address[2]);
            $("#Location_Country").val(address[4]);
            var stateZip = address[3].split(" ");
            $($("input#Location_MapLink")[0]).val(urlstring);
            $("#Location_State").val(stateZip[0]);
            $("#Location_Zip").val(stateZip[1]);
            $("#maplink-suggestions").html("");
        }
        else {
            $("#Location_Address").val(address[0]);
            $("#Location_City").val(address[1]);
            $("#Location_Country").val(address[3]);
            var stateZip = address[2].split(" ");
            $($("input#Location_MapLink")[0]).val(urlstring);
            $("#Location_State").val(stateZip[0]);
            $("#Location_Zip").val(stateZip[1]);
            $("#maplink-suggestions").html("");
        }
    });
    $("input#Location_Address").blur(function () {
        if ($('#Location_Address').val() && !$('#Location_MapLink').val())
        {
            $("#maplink-suggestions").html("");
            var data = {};
            data["Address"] = $("#Location_Address").val();
            data["City"] = $("#Location_City").val();
            data["State"] = $("#Location_State").val();
            data["Zip"] = $("#Location_Zip").val();
            data["Country"] = $("#Location_Country").val();
            var addressdata = JSON.stringify(data);

            $.get("@Url.Action(nameof(LocationsController.GetUrlLocations))", { addressJson: addressdata }, function (response) {
                if (response.success == true) {
                    var locations = $.parseJSON(response.data);
                    HandleGoogleLocations(locations);
            }});
        }
        else
        {
            $("#maplink-suggestions").html("");
        }
    });
    function HandleGoogleLocations(locations) {
        for (var index = 0; index < locations.length; index++)
        {
            var link = document.createElement('a');
            link.setAttribute("data-maps-url", locations[index].url);
            link.setAttribute("data-address", locations[index].url);
            link.setAttribute("data-city", locations[index].url);
            link.setAttribute("data-state", locations[index].url);
            link.setAttribute("data-zip",locations[index].url);
            link.innerHTML = " <strong>" + locations[index].name + "</strong>";
            link.classList.add("url-suggestion");
            link.setAttribute("id", "list-item-" + index.toString());
            link.setAttribute("role", "button");

            var listitem = document.createElement("li");
            listitem.classList.add("list-group-item");
            listitem.classList.add("list-group-item-action");
            listitem.classList.add("map-item");
            var icon = document.createElement("span");
            var formatAddr = document.createElement("span");
            formatAddr.innerHTML = " "+locations[index].formatted_address;
            formatAddr.setAttribute("class", "format-addr");
            icon.classList.add("fas");
            icon.classList.add("fa-map-marker-alt");
            listitem.appendChild(icon);
            listitem.appendChild(link);
            listitem.appendChild(formatAddr);
            document.getElementById("maplink-suggestions").appendChild(listitem);
        }
    }
    </script>
}
