@model Ocuda.Ops.Controllers.Areas.SiteManagement.ViewModels.Location.LocationViewModel

@section styles{
    <link rel="stylesheet" href="~/css/md.min.css" asp-append-version="true" />
}

<div class="row">
    <div class="col-sm-7">
        <h1>
            Details
            <small class="text-muted">
                @(Model.Location.IsNewLocation ? "Add Location" : Model.LocationName)
            </small>
        </h1>
    </div>
    <div class="col-sm-5">
        <a class="btn btn-outline-dark mt-2 mb-1 ml-2 float-right"
           asp-controller="@Ocuda.Ops.Controllers.Areas.SiteManagement.LocationsController.Name"
           asp-action="@(nameof(Ocuda.Ops.Controllers.Areas.SiteManagement.LocationsController.Index))">Back</a>
    </div>
</div>

<div class="modal fade"
     data-backdrop="static"
     data-keyboard="false"
     id="listAddModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="listModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addModalTitle"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="modalItemList">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button"
                        class="btn btn-outline-dark mr-1"
                        data-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade"
     data-backdrop="static"
     data-keyboard="false"
     id="itemEditModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="listModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <form method="post"
              role="form"
              id="updateItem"
              asp-controller="@LocationsController.Name"
              asp-action="@nameof(LocationsController.EditLocationFeature)"
              novalidate="novalidate">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalTitle">Edit Feature</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="modalItemInfo">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-outline-dark mr-1"
                            data-dismiss="modal">
                        Cancel
                    </button>
                    <button type="submit"
                            value="Submit"
                            class="btn btn-outline-primary">
                        Save
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade"
     data-backdrop="static"
     data-keyboard="false"
     id="deleteModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="listModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="row">
            <div class="col-12 col-sm-10 col-sm-offset-1">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalTitle"></h5>
                        <button type="button"
                                class="close"
                                data-dismiss="modal"
                                aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                    </div>
                    <div class="modal-footer">
                        <button type="button"
                                class="btn btn-outline-dark mr-1"
                                data-dismiss="modal">
                            Cancel
                        </button>
                        <button type="button"
                                class="btn btn-outline-danger"
                                id="deleteModalConfirm"
                                data-dismiss="modal">
                            <span class="buttonText">Delete</span>
                            <span class="fa fa-spinner fa-pulse fa-lg fa-fw d-none"></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade"
     data-backdrop="static"
     data-keyboard="false"
     id="addSegmentModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="addSegmentTitle">
    <div class="modal-dialog modal-lg" role="document">
        <form method="post"
              role="form"
              asp-controller="@LocationsController.Name"
              asp-action="@nameof(LocationsController.AddSegment)"
              asp-route-locationStub="@Model.Location.Stub"
              novalidate="novalidate">
            <input type="hidden" name="whichSegment" id="oc-segment-type" />
            <div class="row">
                <div class="col-12 col-sm-10 col-sm-offset-1">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addSegmentTitle">
                                Add segment: <span id="oc-show-segment-type"></span>
                            </h5>
                            <button type="button"
                                    class="close"
                                    data-dismiss="modal"
                                    aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>Segment text (maximum 2000 characters):</p>
                            <textarea style="width: 100%;"
                                      id="oc-segment-text"
                                      name="segmentText"
                                      rows="5"
                                      markdown-editor></textarea>
                        </div>
                        <div class="modal-footer">
                            <button type="button"
                                    class="btn btn-outline-dark mr-1"
                                    data-dismiss="modal">
                                Cancel
                            </button>
                            <button type="submit" class="btn btn-outline-success">
                                <span class="buttonText">Add Segment</span>
                                <span class="fa fa-spinner fa-pulse fa-lg fa-fw d-none"></span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade"
     data-backdrop="static"
     data-keyboard="false"
     id="removeSegmentModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="removeSegmentTitle">
    <div class="modal-dialog modal-lg" role="document">
        <form method="post"
              role="form"
              asp-controller="@LocationsController.Name"
              asp-action="@nameof(LocationsController.RemoveSegment)"
              asp-route-locationStub="@Model.Location.Stub"
              novalidate="novalidate">
            <input type="hidden" name="whichSegment" id="oc-remove-segment" />
            <div class="row">
                <div class="col-12 col-sm-10 col-sm-offset-1">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="removeSegmentTitle">
                                Remove segment: <span id="oc-show-remove-segment"></span>
                            </h5>
                            <button type="button"
                                    class="close"
                                    data-dismiss="modal"
                                    aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>Remove this segment?</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button"
                                    class="btn btn-outline-dark mr-1"
                                    data-dismiss="modal">
                                Cancel
                            </button>
                            <button type="submit" class="btn btn-outline-danger">
                                <span class="buttonText">Remove Segment</span>
                                <span class="fa fa-spinner fa-pulse fa-lg fa-fw d-none"></span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade"
     data-backdrop="static"
     data-keyboard="false"
     id="removeSocialCardModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="removeSocialCardTitle">
    <div class="modal-dialog" role="document">
        <form method="post"
              role="form"
              asp-controller="@LocationsController.Name"
              asp-action="@nameof(LocationsController.RemoveSocial)"
              asp-route-locationStub="@Model.Location.Stub"
              novalidate="novalidate">
            <div class="row">
                <div class="col-12 col-sm-10 col-sm-offset-1">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="removeSocialCardTitle">
                                Remove Social Card
                            </h5>
                            <button type="button"
                                    class="close"
                                    data-dismiss="modal"
                                    aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>Remove the associated Social Card?</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button"
                                    class="btn btn-outline-dark mr-1"
                                    data-dismiss="modal">
                                Cancel
                            </button>
                            <button type="submit" class="btn btn-outline-danger">
                                <span class="buttonText">Remove Social Card</span>
                                <span class="fa fa-spinner fa-pulse fa-lg fa-fw d-none"></span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="location-save-container">
    <div class="location-save-message"></div>
</div>

<div class="row d-none" id="pageAlertRow">
    <div class="col-12 col-sm-6 offset-sm-3">
        <div class="alert" id="pageAlert"></div>
    </div>
</div>

@if (!Model.Location.IsNewLocation)
{
    @await Html.PartialAsync("_LocationPartial")
}
<form method="post"
      asp-controller="@LocationsController.Name"
      asp-action="@Model.Action"
      role="form"
      display="inline">
    <div class="row mt-2">
        <div class="col">
            <input asp-for="GroupList" type="hidden" />
            <input asp-for="FeatureList" type="hidden" />
            <input value="@Model.Location.Id"
                   asp-for="Location.Id"
                   id="location-id"
                   type="hidden" />
            <input value="@Model.Location.Name"
                   asp-for="Location.Name"
                   formgroup
                   autocomplete="off" />
            <input value="@Model.Location.Stub"
                   asp-for="Location.Stub"
                   info-tooltip="The stub is the nickname/URL for the location."
                   on-blur-js="FormatStub"
                   formgroup
                   autocomplete="off" />
            <input value="@Model.Location.Code"
                   asp-for="Location.Code"
                   formgroup
                   autocomplete="off" />
            <input value="@Model.Location.Address"
                   asp-for="Location.Address"
                   formgroup
                   autocomplete="off" />
            <input value="@Model.Location.City"
                   asp-for="Location.City"
                   formgroup
                   autocomplete="off" />
            <input value="@Model.Location.State"
                   asp-for="Location.State"
                   formgroup
                   autocomplete="off" />
            <input value="@Model.Location.Zip"
                   asp-for="Location.Zip"
                   formgroup
                   autocomplete="off" />
            <input value="@Model.Location.Country"
                   asp-for="Location.Country"
                   formgroup
                   autocomplete="off" />
            <div class="row form-group mt-4">
                <div class="col-form-label text-md-right col-md-3">
                    <label asp-for="Location.GeoLocation"></label>
                </div>
                <div class="col-md-9">
                    <div class="input-group">
                        <input type="text"
                               class="form-control"
                               id="geolocation"
                               asp-for="Location.GeoLocation" />
                        <div class="input-group-append">
                            <a class="btn btn-outline-info"
                               id="oc-map"
                               title="Display these coordinates on a map"
                               href="#">
                                <span class="far fa-map" aria-hidden="true"></span>
                            </a>
                            <a class="btn btn-outline-primary"
                               id="oc-geocode"
                               title="Use address to look up coordinates"
                               href="#">
                                <span class="fas fa-redo-alt"
                                      aria-hidden="true"></span>
                            </a>
                        </div>
                    </div>
                </div>
                <span class="validation-message text-danger"
                      asp-validation-for="Location.GeoLocation"></span>
            </div>
            <input value="@Model.Location.MapLink"
                   asp-for="Location.MapLink"
                   formgroup
                   autocomplete="off" />
            <input type="tel"
                   value="@Model.Location.Phone"
                   asp-for="Location.Phone"
                   formgroup
                   autocomplete="off" />
            <input value="@Model.Location.Facebook"
                   asp-for="Location.Facebook"
                   formgroup
                   autocomplete="off" />
            <input value="@Model.Location.EventLink"
                   asp-for="Location.EventLink"
                   formgroup
                   autocomplete="off" />
            <input value="@Model.Location.SubscriptionLink"
                   asp-for="Location.SubscriptionLink"
                   formgroup
                   autocomplete="off" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-9 offset-md-3">
            <button type="submit"
                    id="submit"
                    value="Submit"
                    class="btn btn-outline-success"
                    button-spinner>
                <span class="buttonText">
                    <span class="far fa-save"></span>
                    Save Location Details
                </span>
            </button>
        </div>
    </div>
</form>

@if (!Model.Location.IsNewLocation)
{
    <div class="row form-group mt-4">
        <div class="col-form-label text-md-right col-md-3">
            <label asp-for="Location.DescriptionSegmentId">
            </label><span class="fas fa-asterisk fa-xs d-inline-block ml-2 text-danger oc-required-field-marker"></span>
        </div>
        <div class="col-md-9">
            <div class="input-group">
                <input type="text"
                       class="form-control"
                       disabled
                       value="@Model.DescriptionSegmentName" />
                <div class="input-group-append">
                    @if (string.IsNullOrEmpty(Model.DescriptionSegmentName))
                    {
                        <button class="btn btn-outline-success"
                                data-segment="Description"
                                data-segment-display="Description"
                                data-toggle="modal"
                                data-target="#addSegmentModal">
                            <span class="fas fa-plus-circle"
                                  aria-hidden="true"
                                  title="Add segment"></span>
                        </button>
                    }
                    else
                    {
                        <a class="btn btn-outline-primary"
                           asp-action="@nameof(SegmentsController.Detail)"
                           asp-controller="@SegmentsController.Name"
                           asp-route-id="@Model.Location.DescriptionSegmentId">
                            <span class="far fa-file-alt"
                                  aria-hidden="true"
                                  title="Edit segment"></span>
                        </a>
                    }
                </div>
            </div>
        </div>
        <span class="validation-message text-danger"
              asp-validation-for="Location.DescriptionSegmentId"></span>
    </div>

    <div class="row form-group">
        <div class="col-form-label text-md-right col-md-3">
            <label asp-for="Location.HoursSegmentId"></label>
        </div>
        <div class="col-md-9">
            <div class="input-group">
                <input type="text"
                       class="form-control"
                       disabled
                       value="@Model.HoursSegmentName" />
                <div class="input-group-append">
                    @if (string.IsNullOrEmpty(Model.HoursSegmentName))
                    {
                        <button class="btn btn-outline-success"
                                data-segment="HoursOverride"
                                data-segment-display="Hours Override"
                                data-toggle="modal"
                                data-target="#addSegmentModal">
                            <span class="fas fa-plus-circle"
                                  aria-hidden="true"
                                  title="Add segment"></span>
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-outline-danger"
                                data-segment="HoursOverride"
                                data-segment-display="Hours Override"
                                data-toggle="modal"
                                data-target="#removeSegmentModal">
                            <span class="fas fa-minus-circle"
                                  aria-hidden="true"
                                  title="Remove segment"></span>
                        </button>
                        <a class="btn btn-outline-primary"
                           asp-action="@nameof(SegmentsController.Detail)"
                           asp-controller="@SegmentsController.Name"
                           asp-route-id="@Model.Location.HoursSegmentId">
                            <span class="far fa-file-alt"
                                  aria-hidden="true"
                                  title="Edit segment"></span>
                        </a>
                    }
                </div>
            </div>
        </div>
        <span class="validation-message text-danger"
              asp-validation-for="Location.HoursSegmentId"></span>
    </div>

    <div class="row form-group">
        <div class="col-form-label text-md-right col-md-3">
            <label asp-for="Location.PreFeatureSegmentId"></label>
        </div>
        <div class="col-md-9">
            <div class="input-group">
                <input type="text"
                       class="form-control"
                       disabled
                       value="@Model.PreFeatureSegmentName" />
                <div class="input-group-append">
                    @if (string.IsNullOrEmpty(Model.PreFeatureSegmentName))
                    {
                        <button class="btn btn-outline-success"
                                data-segment="PreFeature"
                                data-segment-display="Pre-Feature"
                                data-toggle="modal"
                                data-target="#addSegmentModal">
                            <span class="fas fa-plus-circle"
                                  aria-hidden="true"
                                  title="Add segment"></span>
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-outline-danger"
                                data-segment="PreFeature"
                                data-segment-display="Pre-Feature"
                                data-toggle="modal"
                                data-target="#removeSegmentModal">
                            <span class="fas fa-minus-circle"
                                  aria-hidden="true"
                                  title="Remove segment"></span>
                        </button>
                        <a class="btn btn-outline-primary"
                           asp-action="@nameof(SegmentsController.Detail)"
                           asp-controller="@SegmentsController.Name"
                           asp-route-id="@Model.Location.PreFeatureSegmentId">
                            <span class="far fa-file-alt"
                                  aria-hidden="true"
                                  title="Edit segment"></span>
                        </a>
                    }
                </div>
            </div>
        </div>
        <span class="validation-message text-danger"
              asp-validation-for="Location.PreFeatureSegmentId"></span>
    </div>

    <div class="row form-group">
        <div class="col-form-label text-md-right col-md-3">
            <label asp-for="Location.PostFeatureSegmentId"></label>
        </div>
        <div class="col-md-9">
            <div class="input-group">
                <input type="text"
                       class="form-control"
                       disabled
                       value="@Model.PostFeatureSegmentName" />
                <div class="input-group-append">
                    @if (string.IsNullOrEmpty(Model.PostFeatureSegmentName))
                    {
                        <button class="btn btn-outline-success"
                                data-segment="PostFeature"
                                data-segment-display="Post-Feature"
                                data-toggle="modal"
                                data-target="#addSegmentModal">
                            <span class="fas fa-plus-circle"
                                  aria-hidden="true"
                                  title="Add segment"></span>
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-outline-danger"
                                data-segment="PostFeature"
                                data-segment-display="Post-Feature"
                                data-toggle="modal"
                                data-target="#removeSegmentModal">
                            <span class="fas fa-minus-circle"
                                  aria-hidden="true"
                                  title="Remove segment"></span>
                        </button>
                        <a class="btn btn-outline-primary"
                           asp-action="@nameof(SegmentsController.Detail)"
                           asp-controller="@SegmentsController.Name"
                           asp-route-id="@Model.Location.PostFeatureSegmentId">
                            <span class="far fa-file-alt"
                                  aria-hidden="true"
                                  title="Edit segment"></span>
                        </a>
                    }
                </div>
            </div>
        </div>
        <span class="validation-message text-danger"
              asp-validation-for="Location.PostFeatureSegmentId"></span>
    </div>

    <div class="row form-group">
        <div class="col-form-label text-md-right col-md-3">
            <label asp-for="Location.SocialCardId"></label>
        </div>
        <div class="col-md-9">
            <div class="input-group">
                <input type="text"
                       class="form-control"
                       disabled
                       value="@Model.SocialCardName" />
                <div class="input-group-append">
                    @if (string.IsNullOrEmpty(Model.SocialCardName))
                    {
                        <a class="btn btn-outline-success"
                           asp-controller="@SocialCardsController.Name"
                           asp-action="@nameof(SocialCardsController.EditForLocation)"
                           asp-route-locationStub="@Model.LocationStub">
                            <span class="fas fa-plus-circle"
                                  aria-hidden="true"
                                  title="Add social card"></span>
                        </a>
                    }
                    else
                    {
                        <button class="btn btn-outline-danger"
                                data-toggle="modal"
                                data-target="#removeSocialCardModal">
                            <span class="fas fa-minus-circle"
                                  aria-hidden="true"
                                  title="Delete social card"></span>
                        </button>
                        <a class="btn btn-outline-primary"
                           asp-action="@nameof(SocialCardsController.EditForLocation)"
                           asp-controller="@SocialCardsController.Name"
                           asp-route-locationStub="@Model.LocationStub">
                            <span class="far fa-file-alt"
                                  aria-hidden="true"
                                  title="Edit social card"></span>
                        </a>
                    }
                </div>
            </div>
        </div>
        <span class="validation-message text-danger"
              asp-validation-for="Location.SocialCardId"></span>
    </div>

    <div class="row mt-2">
        <div class="col">
            <h3>Location features</h3>
            <table class="table table-sm table-bordered table-hover">
                <thead>
                    <tr>
                        <th class="align-middle">Name</th>
                        <th class="align-middle">Type</th>
                        <th class="align-middle">Custom Text/Redirect URL</th>
                        <th class="align-middle text-right">
                            <button type="button"
                                    class="btn btn-outline-success addItemButtonModal"
                                    data-itemType="Feature">
                                <span class="fas fa-plus-circle"></span>
                            </button>
                        </th>
                    </tr>
                </thead>
                <tbody id="featureList">
                    @if (Model.LocationFeatures.Any())
                    {

                        @foreach (var locationFeature in Model.LocationFeatures)
                        {
                            @foreach (var feature in Model.Features.Where(_ => _.Id == locationFeature.FeatureId))
                            {
                                <tr>
                                    <td class="align-middle edit-item"
                                        style="cursor: pointer;"
                                        data-itemName="@feature.Name"
                                        data-itemtype="Feature"
                                        data-itemid="@locationFeature.FeatureId">
                                        <span class="btn-link">@feature.Name</span>
                                    </td>
                                    <td class="align-middle text-center">
                                        @if (!string.IsNullOrEmpty(locationFeature.Text))
                                        {
                                            <span class="fas fa-align-left"
                                                  title="Custom Text"></span>
                                        }
                                        else if (!string.IsNullOrEmpty(locationFeature.RedirectUrl))
                                        {
                                            <span class="fas fa-link" title="Redirect URL"></span>
                                        }
                                        else
                                        {
                                            <a class="btn btn-outline-dark"
                                               asp-area="@Ocuda.Ops.Controllers.Areas.SiteManagement.FeaturesController.Area"
                                               asp-controller="@Ocuda.Ops.Controllers.Areas.SiteManagement.FeaturesController.Name"
                                               asp-action="@nameof(Ocuda.Ops.Controllers.Areas.SiteManagement.FeaturesController.Feature)"
                                               asp-route-featureName="@feature.Name?.Replace(" ", "")"
                                               target="_blank">
                                                <span class="fas fa-globe-americas" title="Multi-location feature"></span>
                                            </a>
                                        }
                                    </td>
                                    <td class="align-middle">
                                        @if (!string.IsNullOrEmpty(locationFeature?.Text))
                                        {
                                            @if (locationFeature.Text.Length > 200)
                                            {
                                                @(locationFeature.Text.Substring(0, 200) + "...")
                                            }
                                            else
                                            {
                                                @locationFeature.Text
                                            }
                                        }
                                        else
                                        {
                                            if (string.IsNullOrEmpty(locationFeature.RedirectUrl))
                                            {
                                                @if (feature.BodyText?.Length > 200)
                                                {
                                                    <em class="text-muted">@(feature.BodyText.Substring(0, 200) + "...")</em>
                                                }
                                                else
                                                {
                                                    <em class="text-muted">@feature.BodyText</em>
                                                }
                                            }
                                            else
                                            {
                                                if (locationFeature.RedirectUrl?.StartsWith("http") == true)
                                                {
                                                    <a href="@locationFeature.RedirectUrl"
                                                       target="_blank">@locationFeature.RedirectUrl</a>
                                                }
                                                else
                                                {
                                                    @locationFeature.RedirectUrl
                                                }
                                            }
                                            @if (locationFeature.NewTab)
                                            {
                                                <br /><em>Opens in a new tab</em>
                                            }
                                        }
                                    </td>
                                    <td class="align-middle text-right">
                                        <button type="button"
                                                class="btn btn-outline-danger deleteItemButton"
                                                data-itemType="Feature"
                                                data-itemId="@locationFeature.FeatureId"
                                                data-itemName="@feature.Name">
                                            <span class="fas fa-minus-circle"
                                                  aria-hidden="true"></span>
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                    }
                    else
                    {
                        <tr><td colspan="4"><em class="text-muted">No features.</em></td></tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col">
            <h3>Location groups</h3>
            <table class="table table-sm table-bordered table-hover">
                <thead>
                    <tr>
                        <th class="align-middle">Group Type</th>
                        <th class="align-middle">Location Region?</th>
                        <th class="align-middle">Location's Map Group</th>
                        <th class="align-middle text-right">
                            <button type="button"
                                    class="btn btn-outline-success addItemButtonModal"
                                    data-toggle="modal"
                                    data-itemType="Group">
                                <span class="fas fa-plus-circle"></span>
                            </button>
                        </th>
                    </tr>
                </thead>
                <tbody id="groupList">
                    @if (Model.LocationGroups.Any())
                    {
                        @foreach (var locationGroup in Model.LocationGroups)
                        {
                            @foreach (var group in Model.Groups.Where(_ => _.Id == locationGroup.GroupId))
                            {
                                <tr>
                                    <td class="edit-item align-middle"
                                        data-itemName="@group.GroupType"
                                        data-itemtype="Group"
                                        data-itemid="@locationGroup.GroupId">
                                        @group.GroupType
                                    </td>
                                    <td class="align-middle">
                                        @if (group.IsLocationRegion)
                                        {
                                            <span class="fas fa-check"></span>
                                        }
                                    </td>
                                    <td class="align-middle"
                                        style="vertical-align:middle;">
                                        @if (Model.Location.DisplayGroupId == group.Id)
                                        {
                                            <text>
                                                <span class="fas fa-check"></span>
                                            </text>
                                        }
                                    </td>
                                    <td class="align-middle text-right">
                                        <button type="button"
                                                class="btn btn-outline-danger deleteItemButton"
                                                data-itemType="Group"
                                                data-itemId="@locationGroup.GroupId"
                                                data-itemName="@group.GroupType">
                                            <span class="fas fa-minus-circle"
                                                  aria-hidden="true"></span>
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4"><em class="text-muted">No groups.</em></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@section scripts{
    <script src="~/js/md.min.js" asp-append-version="true"></script>
    <script>
        function FormatStub(object) {
            updateStub($(object), $(object).val());
        }

        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
            var ulMapList = document.createElement("ul");
            ulMapList.classList.add("list-group");
            ulMapList.setAttribute("id", "maplink-suggestions");
            $($("#Location_Address").parent()).append(ulMapList);
        });

        @if (!Model.Location.IsNewLocation)
        {
            <text>
            // Helpers
            function GetItemList(objType) {
                $("#listAddModal").modal("show");
                $.get("@Url.Action(nameof(LocationsController.GetItemsList))",
                    {
                        objectType: objType,
                        page: 1
                    }, function (response) {
                        $("#modalItemList").html(response);
                });
            }

            $(document).on('click', "button.page-link", function (e) {
                $.get("@Url.Action(nameof(LocationsController.GetItemsList))",
                {
                    objectType: $("#addModalTitle").data("objType"),
                    page: $(this).data("page")
                }, function(response) {
                    $("#modalItemList").html(response);
                });
            });

            //Adding an Item
            $(".addItemButtonModal").on('click', function (e) {
                $("#addModalTitle").text("Add a " + $(this).data("itemtype"));
                $("#addModalTitle").attr("data-objType", $(this).data("itemtype"));
                $("#modalItemList").html('<div class="fa-3x text-center"><span class="fas fa-spinner fa-spin"></span></div>');
                $("#listAddModal").modal("show");
                GetItemList($(this).data("itemtype"));
            });

            $(document).on("click", ".additemButton", function () {
                $(".additemButton").addClass("disabled");
                var url = "";
                if ($(this).data("itemtype") == "Group") {
                    url = "@Url.Action(nameof(LocationsController.CreateLocationGroup))";
                } else {
                    url = "@Url.Action(nameof(LocationsController.CreateLocationFeature))";
                }

                $.post(url,
                    {
                        locationId: @Model.Location.Id,
                        itemId: $(this).data("itemid"),
                    }, function () {
                        $("#listAddModal").modal('hide');
                        window.location.reload();
                });
            });

            // Editing an Item
            function GetEditInfo(item, objType) {
                if (objType != "Group" && objType != "Feature") {
                    item = 0;
                }
                $.get("@Url.Action(nameof(LocationsController.GetItemInfo))",
                    {
                        itemId: item,
                        objectType: objType,
                        locationStub: "@Model.Location.Stub"
                    }, function (response) {
                        $("#modalItemInfo").html(response);
                }).done(function () {
                    if (objType == "Feature" && typeof Markdown != "undefined") {
                        var editor = new Markdown.Editor({ allowUploads: false });
                        editor.run();
                    }
                    });
            }

            $("#updateItem").on("hidden.bs.modal", function () {
                $("#updateItem").find(".modal-body").html("");
            });

            $("#updateItem").submit(function() {
                if ($("#updateItem").attr("name") == "Hour" && !$("#accordion-header").hasClass("bg-info")) {
                    $("#Group_SubscriptionUrl").val("");
                    $("#group-isLocationRegion").val("False");
                }
            });

            $(".edit-item").on('click', function (e) {
                var url = "";
                if ($(this).data("itemtype") == "Feature") {
                    url = "@Url.Action(nameof(LocationsController.EditLocationFeature),LocationsController.Name)";
                    $("#editModalTitle").text("Edit Feature: " + $(this).data("itemname"));
                }
                else {
                    url = "@Url.Action(nameof(LocationsController.EditLocationGroup),LocationsController.Name)"
                    $("#editModalTitle").text("Edit Group: " + $(this).data("itemname"));
                }
                $("#modalItemInfo").html('<div class="fa-3x text-center"><span class="fas fa-spinner fa-spin"></span></div>');
                $("#itemEditModal").modal("show");
                $('#updateItem').attr('name', $(this).data("itemtype"));
                $("#updateItem").attr("action",url);
                GetEditInfo($(this).data("itemid"), $(this).data("itemtype"));
            });

            //Updating Delete Modal
            $('.deleteItemButton').on('click', function () {
                $($("#deleteModal").find("button#deleteModalConfirm")).attr("data-itemid",$(this).data("itemid").toString());
                $($("#deleteModal").find("button#deleteModalConfirm")).attr("id", "confirmDelete" + $(this).data("itemtype").toString())
                $("#deleteModalTitle").text("Delete @Model.Location.Name's "+ $(this).data("itemtype") + ": " + $(this).data("itemname"));
                $("#deleteModal").find(".modal-body").html("Are you sure you want to remove the "+ $(this).data("itemtype") + " '<strong>" + $(this).data("itemname") + "</strong>' from '<strong>@Model.Location.Name</strong>'")
                $("#deleteModal").modal("show");
            });

            $(document).on('click', "#confirmDeleteGroup", function () {
                DeleteLocationObject($(this).data('itemid'), "@Url.Action(nameof(LocationsController.DeleteLocationGroup))")
            });

            $(document).on('click', "#confirmDeleteFeature", function () {
                DeleteLocationObject($(this).data('itemid'), "@Url.Action(nameof(LocationsController.DeleteLocationFeature))")
            });

            function DeleteLocationObject(itemId, url) {
                $.post(url,
                    {
                        itemId: itemId,
                        locationId: @Model.Location.Id
                    }, function () {
                        $("#deleteModal").modal('hide');
                        window.location.reload();
                    });
            }

            $('#addSegmentModal').on('show.bs.modal', function (event) {
                let button = $(event.relatedTarget)
                let segment = button.data('segment')
                let segmentDisplay = button.data('segment-display')
                $('#oc-segment-type').val(segment)
                $('#oc-show-segment-type').text(segmentDisplay)
            });

            var segmentEditor = new Markdown.Editor($("#oc-segment-text"), { allowUploads: true });
            segmentEditor.run();

            $('#removeSegmentModal').on('show.bs.modal', function (event) {
                let button = $(event.relatedTarget)
                let segment = button.data('segment')
                let segmentDisplay = button.data('segment-display')
                $('#oc-remove-segment').val(segment)
                $('#oc-show-remove-segment').text(segmentDisplay)
            });
            </text>
        }

        // For Google Maps
        $(document).on('click','#maplink-suggestions li', function () {
            let data = { placeId: $(this).find("a").data("placeid") };
            console.info("Place id:", data)
            $.get("@Url.Action(nameof(LocationsController.GetLocationLink))",
                data,
                function (response) {
                    if (response.success === true) {
                        $($("input#Location_MapLink")[0]).val(response.link);
                    } else {
                        alert(response.message);
                    }
                }
            );

            let address = $(this).find("span.format-addr").text().split(", ");
            if (address.length == 5) {
                $("#Location_Address").val(address[1]);
                $("#Location_City").val(address[2]);
                $("#Location_Country").val(address[4]);
                let stateZip = address[3].split(" ");
                $("#Location_State").val(stateZip[0]);
                $("#Location_Zip").val(stateZip[1]);
                $("#maplink-suggestions").html("");
            } else {
                $("#Location_Address").val(address[0]);
                $("#Location_City").val(address[1]);
                $("#Location_Country").val(address[3]);
                let stateZip = address[2].split(" ");
                $("#Location_State").val(stateZip[0]);
                $("#Location_Zip").val(stateZip[1]);
                $("#maplink-suggestions").html("");
            }
        });

        function CollectAddress() {
            let address = [];
            if ($("#Location_Address").val()) {
                address.push($("#Location_Address").val());
            }
            if ($("#Location_City").val()) {
                address.push($("#Location_City").val());
            }
            if ($("#Location_State").val()) {
                address.push($("#Location_State").val());
            }
            if ($("#Location_Zip").val()) {
                address.push($("#Location_Zip").val());
            }
            if ($("#Location_Country").val()) {
                address.push($("#Location_Country").val());
            }

            return address.join(' ').trim();
        }

        $(document).on('click', '#oc-geocode', function (e) {
            $('#pageAlertRow').addClass('d-none');
            let data = { address: CollectAddress() };

            $.get("@Url.Action(nameof(LocationsController.GetCoordinates))",
                data,
                function (response) {
                    if (response.success === true) {
                        $('#geolocation').val(response.latitude + ',' + response.longitude);
                        $('#pageAlert').addClass('alert-success');
                        $('#pageAlert').html('Successfully updated coordinates.');
                        $('#pageAlertRow').removeClass('d-none');
                    } else {
                        alert(response.message);
                    }
                }
            );
            return false;
        });

        $(document).on('click', '#oc-map', function (e) {
            let coords = $('#geolocation').val()
            if (coords === '') {
                alert("Coordinates must be specified to open on a map.")
            } else {
                window.open('https://maps.google.com/?q=' + coords)
            }
            return false;
        });

        $("input#Location_Address").blur(function () {
            if ($('#Location_Address').val() && !$('#Location_MapLink').val())
            {
                $("#maplink-suggestions").html("");
                let data = {
                    name: $("#Location_Name").val(),
                    address: CollectAddress()
                };
                $.get("@Url.Action(nameof(LocationsController.GetLocations))",
                    data,
                    function (response) {
                        if (response.success == true) {
                            ShowLocationAutocomplete(response.locations);
                        }
                        else
                        {
                            alert(response.message);
                        }
                    });
            }
            else
            {
                $("#maplink-suggestions").html("");
            }
        });

        function ShowLocationAutocomplete(locations) {
            for (var index = 0; index < locations.length; index++)
            {
                console.info(locations[index]);
                var icon = document.createElement("span");
                icon.classList.add("fas");
                icon.classList.add("fa-map-marker-alt");

                var formatAddr = document.createElement("span");
                formatAddr.innerHTML = " " + locations[index].address;
                formatAddr.setAttribute("class", "format-addr");

                var link = document.createElement('a');
                link.innerHTML = " <strong>" + locations[index].name + "</strong>";
                link.classList.add("url-suggestion");
                link.setAttribute("id", "list-item-" + index.toString());
                link.setAttribute("role", "button");
                link.setAttribute("data-placeid", locations[index].placeId);

                var listitem = document.createElement("li");
                listitem.classList.add("list-group-item");
                listitem.classList.add("list-group-item-action");
                listitem.classList.add("map-item");
                listitem.appendChild(icon);
                listitem.appendChild(link);
                listitem.appendChild(formatAddr);
                document.getElementById("maplink-suggestions").appendChild(listitem);
            }
        }
    </script>
}