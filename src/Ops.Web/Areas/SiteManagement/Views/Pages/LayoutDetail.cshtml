@model Ocuda.Ops.Controllers.Areas.SiteManagement.ViewModels.Pages.LayoutDetailViewModel

@section Styles {
    <link rel="stylesheet" href="~/css/dt-picker.min.css" asp-append-version="true" />
}

<form id="addForm" role="form">
    <input id="addLanguage" asp-for="LanguageId" type="hidden" />
    <input id="addLayout" asp-for="PageItem.PageLayoutId" value="@Model.PageLayoutId" type="hidden" />

    <div modal
         id="addModal"
         isLarge="true"
         name="Layout Item"
         type="Ocuda.Utility.TagHelpers.ModalTypes.Add">
        <div class="row form-group">
            <label class="col-form-label text-md-right col-md-3">Item Type</label>
            <div class="form-group-inner col-md-9">
                <select id="addType" class="form-control">
                    <option value="carousel">Carousel</option>
                    <option value="segment">Segment</option>
                </select>
            </div>
        </div>
        <div id="addCarouselFields">
            <input id="addCarouselName" asp-for="Carousel.Name" formgroup />
        </div>
        <div id="addSegmentFields" class="d-none">
            <input id="addSegmentName" asp-for="Segment.Name" formgroup disabled />
            <input id="addSegmentStartDate" asp-for="Segment.StartDate" formgroup datetime-picker="DateTimePickerType.DateTime" disabled />
            <input id="addSegmentEndDate" asp-for="Segment.EndDate" formgroup datetime-picker="DateTimePickerType.DateTime" disabled />
            <select id="addSegmentIsActive" asp-for="Segment.IsActive" formgroup disabled>
                <option value="false">No</option>
                <option value="true">Yes</option>
            </select>
        </div>
    </div>
</form>

<form id="editForm" role="form">
    <input id="editLanguage" asp-for="LanguageId" type="hidden" />
    <input id="editItem" asp-for="PageItem.Id" type="hidden" />

    <div modal
         id="editModal"
         isLarge="true"
         name="Layout Item"
         type="Ocuda.Utility.TagHelpers.ModalTypes.Add">
        <div class="row form-group">
            <label class="col-form-label text-md-right col-md-3">Item Type</label>
            <div class="form-group-inner col-md-9">
                <select id="editType" class="form-control" disabled="disabled">
                    <option value="carousel">Carousel</option>
                    <option value="segment">Segment</option>
                </select>
            </div>
        </div>
        <div id="editCarouselFields" class="d-none">
            <input id="editCarouselName" asp-for="Carousel.Name" formgroup />
        </div>
        <div id="editSegmentFields" class="d-none">
            <input id="editSegmentName" asp-for="Segment.Name" formgroup />
            <input id="editSegmentStartDate" asp-for="Segment.StartDate" formgroup datetime-picker="DateTimePickerType.DateTime" />
            <input id="editSegmentEndDate" asp-for="Segment.EndDate" formgroup datetime-picker="DateTimePickerType.DateTime" />
            <select id="editSegmentIsActive" asp-for="Segment.IsActive" formgroup>
                <option value="false">No</option>
                <option value="true">Yes</option>
            </select>
        </div>
    </div>
</form>

<form asp-controller="@PagesController.Name"
      asp-action="@(nameof(PagesController.DeletePageItem))"
      method="post"
      role="form">
    <input id="deleteLanguage" asp-for="LanguageId" type="hidden" />
    <input id="deleteId" asp-for="PageItem.Id" type="hidden" />

    <div modal id="deleteModal"
         name="Layout Item"
         type="Ocuda.Utility.TagHelpers.ModalTypes.Delete"></div>
</form>

<div class="row pt-2">
    <div class="col-12">
        <input asp-for="PageLayout.Name" formgroup readonly />
        <input asp-for="PageLayout.StartDate" value="@Model.PageLayout.StartDate?.ToString()" formgroup readonly />
        <select asp-for="SelectLanguage" asp-items="Model.LanguageList" formgroup></select>
        <div class="row">
            <div class="col-md-3 offset-md-3">
                <a asp-action="@(nameof(PagesController.Layouts))"
                   asp-route-id="@Model.PageLayout.PageHeaderId"
                   class="btn btn-outline-secondary text-dark">
                    Return to Layout List
                </a>
            </div>
        </div>
    </div>
</div>

<div class="row pb-1">
    <div class="col-12 col-md-9 offset-md-3">
        <hr />
    </div>
</div>

<div class="row pb-1">
    <div class="col-12">
        <form asp-action="@nameof(PagesController.LayoutDetail)" method="post" role="form">
            <input asp-for="PageLayoutText.PageLayoutId" value="@Model.PageLayoutId" type="hidden" />
            <input asp-for="PageLayoutText.LanguageId" value="@Model.LanguageId" type="hidden" />

            <input asp-for="PageLayoutText.Title" value="@Model.PageLayout.PageLayoutText?.Title" formgroup />

            <div class="row">
                <div class="offset-md-3 col-md-9">
                    <button type="submit" class="btn btn-success" buttonspinner>
                        Save
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="row pb-2">
    <div class="col-12">
        <hr />
        <button class="btn btn-outline-secondary text-dark"
                data-toggle="modal"
                data-target="#addModal">
            Add Item
        </button>
    </div>
</div>

<table class="table table-sm table-bordered table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Type</th>
            <th>&nbsp;</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PageLayout.Items)
        {
            <tr>
                @if (item.CarouselId.HasValue)
                {
                    <td>@item.Carousel.Name</td>
                    <td>Carousel</td>
                }
                else
                {
                    <td>@item.Segment.Name</td>
                    <td>Segment</td>
                }
                <td align="center">
                    <button type="button"
                            class="btn btn-link changeSort decreaseSortButton"
                            data-id="@item.Id"
                            data-increase="false"
                            data-item="true"
                            disabled="@(item.Id == Model.PageLayout.Items.First().Id ? "disabled" : null)">
                        <span class="fas fa-arrow-up" aria-hidden="true"></span>
                    </button>
                    <button class="btn btn-link changeSort increaseSortButton"
                            data-id="@item.Id"
                            data-increase="true"
                            data-item="true"
                            disabled="@(item.Id == Model.PageLayout.Items.Last().Id ? "disabled" : null)">
                        <span class="fas fa-arrow-down" aria-hidden="true"></span>
                    </button>
                    <button type="button"
                            class="btn btn-link"
                            data-toggle="modal"
                            data-target="#editModal"
                            data-id="@item.Id"
                            data-carousel="@(Newtonsoft.Json.JsonConvert.SerializeObject(item.Carousel))"
                            data-segment="@(Newtonsoft.Json.JsonConvert.SerializeObject(item.Segment))"
                            data-active="@item.Segment?.IsActive"
                            title="Edit @(item.CarouselId.HasValue ? "carousel" : "segment")">
                        <span class="fas fa-cog" aria-hidden="true"></span>
                    </button>
                    @if (item.CarouselId.HasValue)
                    {
                        <a asp-controller="@CarouselsController.Name"
                           asp-action="@(nameof(CarouselsController.Detail))"
                           asp-route-id="@item.CarouselId.Value"
                           class="btn btn-link"
                           title="Edit carousel content">
                            <span class="far fa-file-alt" aria-hidden="true"></span>
                        </a>
                    }
                    else
                    {
                        <a asp-controller="@SegmentsController.Name"
                           asp-action="@(nameof(SegmentsController.Detail))"
                           asp-route-id="@item.SegmentId.Value"
                           class="btn btn-link"
                           title="Edit segment content">
                            <span class="far fa-file-alt" aria-hidden="true"></span>
                        </a>
                    }
                    <button type="button"
                            class="btn btn-link"
                            data-toggle="modal"
                            data-target="#deleteModal"
                            data-id="@item.Id"
                            data-name="@(item.Carousel?.Name ?? item.Segment?.Name)"
                            data-carousel="@item.CarouselId"
                            data-segment="@item.SegmentId"
                            title="Delete layout item">
                        <span class="fas fa-trash-alt" aria-hidden="true"></span>
                    </button>
                </td>

            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="~/js/dt-picker.min.js" asp-append-version="true"></script>
    <script>
        $(".datetimepicker").datetimepicker({
            allowInputToggle: true,
            sideBySide: true
        });

        $("#SelectLanguage").on("change", function () {
            window.location.href = "@Url.Action(nameof(PagesController.LayoutDetail), new { id = Model.PageLayoutId})" + "?language=" + $(this).val();
        });

        $("#addType").on("change", function () {
            var type = $(this).val();

            if (type == "carousel") {
                $("#addSegmentFields").addClass("d-none").find("input, select").attr("disabled", "disabled");
                $("#addCarouselFields").removeClass("d-none").find("input").removeAttr("disabled");
            }
            else {
                $("#addCarouselFields").addClass("d-none").find("input").attr("disabled", "disabled")
                $("#addSegmentFields").removeClass("d-none").find("input, select").removeAttr("disabled");
            }
        });

        var blah;
        $("#addForm").submit(function (e) {
            e.preventDefault();
            var form = $(this);
            $.post("@(Url.Action(nameof(PagesController.CreatePageItem), PagesController.Name))",
                form.serialize(),
                function (response) {
                    if (response.success == true) {
                        location.href = response.url;
                    }
                    else {
                        alert(response.message);
                        ResetSpinners(form.find(".btn-spinner"));
                    }
                });
        });

        $("#editModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var id = button.data("id");
            var carousel = button.data("carousel");
            var segment = button.data("segment");

            $("#editItem").val(id);

            if (carousel) {
                $("#editCarouselName").val(carousel.Name);

                $("#editSegmentFields").addClass("d-none").find("input, select").attr("disabled", "disabled");
                $("#editCarouselFields").removeClass("d-none").find("input").removeAttr("disabled");

                $("#editType").val("carousel");
            }
            else {
                $("#editSegmentName").val(segment.Name);
                $("#editSegmentStartDate").val(segment.StartDate);
                $("#editSegmentEndDate").val(segment.EndDate);
                $("#editSegmentIsActive").val(segment.IsActive.toString());

                $("#editCarouselFields").addClass("d-none").find("input").attr("disabled", "disabled");
                $("#editSegmentFields").removeClass("d-none").find("input, select").removeAttr("disabled");

                $("#editType").val("segment");
            }
        });

        $("#editForm").submit(function (e) {
            e.preventDefault();
            var form = $(this);
            $.post("@(Url.Action(nameof(PagesController.EditPageItem), PagesController.Name))",
                form.serialize(),
                function (response) {
                if (response.success == true) {
                    location.href = response.url;
                }
                else {
                    alert(response.message);
                    ResetSpinners(form.find(".btn-spinner"));
                }
            });
        });

        $("#deleteModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var id = button.data("id");
            var name = button.data("name");
            var carousel = button.data("carousel");
            var segment = button.data("segment");
            var modal = $(this);

            var type;
            if (carousel) {
                type = "carousel";
            }
            else if (segment) {
                type = "segment";
            }

            $("#deleteId").val(id);
            $("#deleteName").val(name);
            modal.find(".modal-text").text("Are you sure you want to delete the " + type +  " \"" + name + "\"?");
        });

        $(".changeSort").on("click", function () {
            var button = $(this);
            var id = button.data("id");
            var increase = button.data("increase");
            var icon = button.children("span");
            if (icon.hasClass("fa-spinner") == false) {
                icon.removeClass("fa-arrow-up fa-arrow-down").addClass("fa-spinner fa-pulse");
                $.post("@Url.Action(nameof(PagesController.ChangeSort))",
                    { id, increase },
                    function (response) {
                        icon.removeClass("fa-spinner fa-pulse");
                        if (increase) {
                            icon.addClass("fa-arrow-down");
                        }
                        else {
                            icon.addClass("fa-arrow-up");
                        }
                        if (response.success) {
                            var row = button.closest("tr");
                            if (increase) {
                                var nextRow = row.next();
                                row.insertAfter(nextRow);
                                row.find(".decreaseSortButton").removeAttr("disabled");
                                if (row.next().length == 0) {
                                    row.find(".increaseSortButton").attr("disabled", "disabled");
                                }
                                nextRow.find(".increaseSortButton").removeAttr("disabled");
                                if (nextRow.prev().length == 0) {
                                    nextRow.find(".decreaseSortButton").attr("disabled", "disabled");
                                }
                            }
                            else {
                                var prevRow = row.prev();
                                row.insertBefore(prevRow);
                                row.find(".increaseSortButton").removeAttr("disabled");
                                if (row.prev().length == 0) {
                                    row.find(".decreaseSortButton").attr("disabled", "disabled");
                                }
                                prevRow.find(".decreaseSortButton").removeAttr("disabled");
                                if (prevRow.next().length == 0) {
                                    prevRow.find(".increaseSortButton").attr("disabled", "disabled");
                                }
                            }
                        }
                        else {
                            alert(response.message);
                        }
                });
            }
        });
    </script>
}