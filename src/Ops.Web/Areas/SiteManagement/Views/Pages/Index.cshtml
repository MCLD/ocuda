@model Ocuda.Ops.Controllers.Areas.SiteManagement.ViewModels.Pages.IndexViewModel

<div class="row mb-2">
    <div class="col-sm-7">
        <h1>Pages</h1>
    </div>
    <div class="col-sm-5">
        <a class="btn btn-outline-dark mt-2 mb-1 ml-2 float-right"
           asp-controller="@Ocuda.Ops.Controllers.Areas.SiteManagement.HomeController.Name"
           asp-action="@(nameof(Ocuda.Ops.Controllers.Areas.SiteManagement.HomeController.Index))">Back</a>
        @if (Model.IsSiteManager)
        {
            <button class="btn btn-outline-success mt-2 mb-1 mr-2 float-right"
                    data-toggle="modal"
                    data-target="#addModal">
                <span class="fas fa-plus-circle" aria-hidden="true"></span>
                Add Page
            </button>
        }
    </div>
</div>

<form id="addForm" role="form">
    <div modal
         id="addModal"
         isLarge="true"
         name="Page"
         type="Ocuda.Utility.TagHelpers.ModalTypes.Add">
        <input id="addName" asp-for="PageHeader.PageName" formgroup />
        <input id="addStub" asp-for="PageHeader.Stub" formgroup />
        <select id="addType" asp-for="PageHeader.Type" formgroup>
            @foreach (var type in (PageType[])Enum.GetValues(typeof(PageType)))
            {
                <option value="@Convert.ToInt32(type)"
                        selected="@(type == Model.PageType ? "selected" : null)">
                    @type
                </option>
            }
        </select>
        <select id="addLayout" asp-for="PageHeader.IsLayoutPage" formgroup>
            <option></option>
            <option value="False">No</option>
            <option value="True">Yes</option>
        </select>
        <div id="addTemplateContainer" class="d-none">
            <select id="addCarouselTemplate"
                    asp-for="PageHeader.LayoutCarouselTemplateId"
                    asp-items="@Model.CarouselTemplates"
                    formgroup
                    disabled>
                <option></option>
            </select>
            <select id="addFeatureTemplate"
                    asp-for="PageHeader.LayoutFeatureTemplateId"
                    asp-items="@Model.FeatureTemplates"
                    formgroup
                    disabled>
                <option></option>
            </select>
            <select id="addWebslideTemplate"
                    asp-for="PageHeader.LayoutWebslideTemplateId"
                    asp-items="@Model.WebslideTemplates"
                    formgroup
                    disabled>
                <option></option>
            </select>
        </div>
    </div>
</form>

<form id="editForm" role="form">
    <input id="editId" asp-for="PageHeader.Id" type="hidden" />
    <div modal
         id="editModal"
         isLarge="true"
         name="Page"
         type="Ocuda.Utility.TagHelpers.ModalTypes.Edit">
        <input id="editName" asp-for="PageHeader.PageName" formgroup />
        <input id="editStub" asp-for="PageHeader.Stub" formgroup readonly />
        <select id="editType" asp-for="PageHeader.Type" formgroup disabled>
            @foreach (var type in (PageType[])Enum.GetValues(typeof(PageType)))
            {
                <option value="@Convert.ToInt32(type)" selected>@type</option>
            }
        </select>
        <select id="editLayout" asp-for="PageHeader.IsLayoutPage" formgroup disabled>
            <option value="False">No</option>
            <option value="True">Yes</option>
        </select>
        <div id="editTemplateContainer" class="d-none">
            <select id="editCarouselTemplate"
                    asp-for="PageHeader.LayoutCarouselTemplateId"
                    asp-items="@Model.CarouselTemplates"
                    formgroup
                    disabled>
                <option></option>
            </select>
            <select id="editFeatureTemplate"
                    asp-for="PageHeader.LayoutFeatureTemplateId"
                    asp-items="@Model.FeatureTemplates"
                    formgroup
                    disabled>
                <option></option>
            </select>
            <select id="editWebslideTemplate"
                    asp-for="PageHeader.LayoutWebslideTemplateId"
                    asp-items="@Model.WebslideTemplates"
                    formgroup
                    disabled>
                <option></option>
            </select>
        </div>
    </div>
</form>

<form asp-controller="@PagesController.Name"
      asp-action="@(nameof(PagesController.Delete))"
      method="post"
      role="form">
    <input id="deleteCurrentPage" asp-for="PaginateModel.CurrentPage" type="hidden" />
    <input id="deleteType" asp-for="PageType" type="hidden" />

    <input id="deleteId" asp-for="PageHeader.Id" type="hidden" />
    <input id="deleteName" asp-for="PageHeader.PageName" type="hidden" />

    <div modal id="deleteModal"
         name="Page"
         type="Ocuda.Utility.TagHelpers.ModalTypes.Delete"></div>
</form>

<div class="row mb-2">
    <div class="col-12">
        <ul class="nav nav-pills">
            <li class="nav-item">
                <a asp-action="@nameof(PagesController.Index)"
                   asp-route-Type=""
                   class="nav-link"
                   ActiveBy routeKey="type" value=",@PageType.Home">
                    @PageType.Home.ToString()
                </a>
            </li>
            <li class="nav-item">
                <a asp-action="@nameof(PagesController.Index)"
                   asp-route-Type="@PageType.About"
                   class="nav-link"
                   ActiveBy routeKey="type" value="@PageType.About">
                    @PageType.About.ToString()
                </a>
            </li>
            <li class="nav-item">
                <a asp-action="@nameof(PagesController.Index)"
                   asp-route-Type="@PageType.News"
                   class="nav-link"
                   ActiveBy routeKey="type" value="@PageType.News">
                    @PageType.News.ToString()
                </a>
            </li>
            <li class="nav-item">
                <a asp-action="@nameof(PagesController.Index)"
                   asp-route-Type="@PageType.Subject"
                   class="nav-link"
                   ActiveBy routeKey="type" value="@PageType.Subject">
                    @PageType.Subject.ToString()
                </a>
            </li>
        </ul>
    </div>
</div>

@if (Model.PageHeaders.Count() == 0)
{
    <div class="alert alert-warning">No Pages Found</div>
}
else
{
    <div class="row">
        <div class="col-12">
            <div>
                <table class="table table-sm table-bordered table-hover table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Stub</th>
                            <th>Type</th>
                            <th>Languages</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var header in Model.PageHeaders)
                        {
                            <tr>
                                <td class="align-middle">
                                    @if (Model.IsSiteManager || Model.PermissionIds.Any(_ => header.PermissionGroupIds.Contains(_)))
                                    {
                                        <a asp-action="@(header.IsLayoutPage ? nameof(PagesController.Layouts) : nameof(PagesController.Detail))"
                                           asp-route-id="@header.Id">
                                            @header.PageName
                                        </a>
                                    }
                                    else
                                    {
                                        @header.PageName
                                    }
                                </td>
                                <td class="align-middle">@header.Stub</td>
                                <td class="align-middle">@header.Type.ToString()</td>
                                <td class="align-middle">@string.Join(", ", header.PageLanguages)</td>
                                <td class="align-middle text-nowrap">
                                    @if (Model.IsSiteManager)
                                    {
                                        <a asp-action="@(nameof(PagesController.ContentPermissions))"
                                           asp-route-id="@header.Id"
                                           title="Page content permissions"
                                           class="btn btn-outline-primary">
                                            <span class="fas fa-user-plus" aria-hidden="true"></span>
                                        </a>
                                        <button type="button"
                                                class="btn btn-outline-primary"
                                                data-toggle="modal"
                                                data-target="#editModal"
                                                data-id="@header.Id"
                                                data-layout="@header.IsLayoutPage"
                                                data-name="@header.PageName"
                                                data-stub="@header.Stub"
                                                data-type="@((int)header.Type)"
                                                data-carouseltemplate="@header.LayoutCarouselTemplateId"
                                                data-featuretemplate="@header.LayoutFeatureTemplateId"
                                                data-webslidetemplate="@header.LayoutWebslideTemplateId"
                                                title="Edit page name">
                                            <span class="fas fa-cog" aria-hidden="true"></span>
                                        </button>
                                    }
                                    @if (Model.IsSiteManager || Model.PermissionIds.Any(_ => header.PermissionGroupIds.Contains(_)))
                                    {
                                        <a asp-action="@(nameof(PagesController.Detail))"
                                           asp-route-id="@header.Id"
                                           class="btn btn-outline-primary"
                                           title="Edit page content">
                                            <span class="far fa-file-alt" aria-hidden="true"></span>
                                        </a>
                                    }
                                    @if (Model.IsSiteManager)
                                    {
                                        <button type="button"
                                                class="btn btn-outline-danger"
                                                data-toggle="modal"
                                                data-target="#deleteModal"
                                                data-id="@header.Id"
                                                data-name="@header.PageName"
                                                title="Delete page">
                                            <span class="fas fa-times-circle" aria-hidden="true"></span>
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @if (Model.PaginateModel.MaxPage > 1)
    {
        <paginate paginateModel="@Model.PaginateModel"></paginate>
    }
}

@section scripts {
    <script>
        $(window).on("load", function() {
            $('.td-class').each(function() {
                $(this).children('a.rowlink').height($(this).height() + 11);
            });
        });
        $(window).resize(function() {
            $('.td-class').each(function() {
                $(this).children('a.rowlink').height($(this).height() + 11);
            });
        });

        var addStub = $("#addStub");

        addStub.on("blur", function () {
            if (addStub.valid()) {
                updateStub(addStub, addStub.val());
                var addType = $("#addType");
                if (addType.val() != "") {
                    setTimeout(function () {
                        ValidateField(addStub,
                            "@Url.Action(nameof(PagesController.StubInUse), PagesController.Name)",
                            [addStub.serialize(), addType.serialize()].join("&"));
                    }, 200);
                }
            }
        })

        $("#addLayout").on("change", function () {
            if ($(this).val() == "True") {
                $("#addTemplateContainer").removeClass("d-none").find("select").removeAttr("disabled");
            }
            else {
                $("#addTemplateContainer").addClass("d-none").find("select").attr("disabled", "disabled");
            }
        });

        $("#addForm").submit(function (e) {
            e.preventDefault();
            var form = $(this);
            if (addStub.valid()) {
                updateStub(addStub, addStub.val());
            }
            $.post("@(Url.Action(nameof(PagesController.Create), PagesController.Name))",
                form.serialize(),
                function (response) {
                    if (response.success == true) {
                        location.href = response.url;
                    }
                    else {
                        alert(response.message);
                        ResetSpinners(form.find(".btn-spinner"));
                    }
                });
        });

        $("#editModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var id = button.data("id");
            var layout = button.data("layout");
            var name = button.data("name");
            var stub = button.data("stub");
            var type = button.data("type");
            var carouselTemplate = button.data("carouseltemplate");
            var featureTemplate = button.data("featuretemplate");
            var webslideTeplate = button.data("webslidetemplate");

            $("#editId").val(id);
            $("#editLayout").val(layout);
            $("#editName").val(name);
            $("#editStub").val(stub);
            $("#editType").val(type);
            $("#editCarouselTemplate").val(carouselTemplate);
            $("#editFeatureTemplate").val(featureTemplate);
            $("#editWebslideTemplate").val(webslideTeplate);

            if (layout == "True") {
                $("#editTemplateContainer").removeClass("d-none");
            }
            else {
                $("#editTemplateContainer").addClass("d-none");
            }
        });

        $("#editForm").submit(function (e) {
            e.preventDefault();
            var form = $(this);
            $.post("@(Url.Action(nameof(PagesController.Edit), PagesController.Name))",
                form.serialize(),
                function (response) {
                    if (response.success == true) {
                        location.reload();
                    }
                    else {
                        alert(response.message);
                        ResetSpinners(form.find(".btn-spinner"));
                    }
                });
        });

        $("#deleteModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var id = button.data("id");
            var name = button.data("name");
            var modal = $(this);
            $("#deleteId").val(id);
            $("#deleteName").val(name);
            modal.find(".modal-text").text("Are you sure you want to delete \"" + name + "\"?");
        });
    </script>
}