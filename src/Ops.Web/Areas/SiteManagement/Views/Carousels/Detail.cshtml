@model Ocuda.Ops.Controllers.Areas.SiteManagement.ViewModels.Carousels.DetailViewModel

<form id="addItemForm" role="form">
    <input id="addItemLanguage" asp-for="LanguageId" type="hidden" />
    <input id="addItemCarouselId" asp-for="CarouselItem.CarouselId" value="@Model.CarouselId" type="hidden" />

    <div modal id="addItemModal" isLarge="true" name="Item" type="Ocuda.Utility.TagHelpers.ModalTypes.Add">
        <input id="addItemLabel" asp-for="CarouselItem.CarouselItemText.Label" formgroup />
        <input id="addItemImageUrl" asp-for="CarouselItem.CarouselItemText.ImageUrl" formgroup
               info-tooltip="@(!string.IsNullOrWhiteSpace(Model.AllowedImageDomains) ? $"Images are restricted to the following domains: {Model.AllowedImageDomains}" : null )" />
        <input id="addItemTitle" asp-for="CarouselItem.CarouselItemText.Title" formgroup />
        <textarea id="addItemDescription" asp-for="CarouselItem.CarouselItemText.Description" formgroup></textarea>
    </div>
</form>

<form asp-action="@(nameof(CarouselsController.DeleteCarouselItem))" method="post" role="form">
    <input id="deleteItemCarousel" asp-for="CarouselId" type="hidden" />
    <input id="deleteItemLanguage" asp-for="LanguageId" type="hidden" />

    <input id="deleteItemId" asp-for="CarouselItem.Id" type="hidden" />
    <input id="deleteItemName" asp-for="CarouselItem.Name" type="hidden" />

    <div modal id="deleteItemModal" name="Item" type="Ocuda.Utility.TagHelpers.ModalTypes.Delete"></div>
</form>

<form id="addButtonForm" role="form">
    <input id="addButtonCarousel" asp-for="CarouselId" type="hidden" />
    <input id="addButtonLanguage" asp-for="LanguageId" type="hidden" />

    <input id="addButtonItem" asp-for="CarouselButton.CarouselItemId" type="hidden" />

    <div modal id="addButtonModal" isLarge="true" name="Button" type="Ocuda.Utility.TagHelpers.ModalTypes.Add">
        <select id="addButtonLabel" asp-for="CarouselButton.LabelId" asp-items="Model.LabelList" formgroup>
            <option></option>
        </select>
        <input id="addButtonUrl" asp-for="CarouselButton.Url" formgroup
               info-tooltip="@(!string.IsNullOrWhiteSpace(Model.AllowedLinkDomains) ? $"Urls are restricted to the following domains: {Model.AllowedLinkDomains}" : null )" />
    </div>
</form>

<form id="editButtonForm" role="form">
    <input id="editButtonCarousel" asp-for="CarouselId" type="hidden" />
    <input id="editButtonLanguage" asp-for="LanguageId" type="hidden" />

    <input id="editButtonId" asp-for="CarouselButton.Id" type="hidden" />

    <div modal id="editButtonModal" isLarge="true" name="Button" type="Ocuda.Utility.TagHelpers.ModalTypes.Edit">
        <select id="editButtonLabel" asp-for="CarouselButton.LabelId" asp-items="Model.LabelList" formgroup></select>

        <input id="editButtonUrl" asp-for="CarouselButton.Url" formgroup
               info-tooltip="@(!string.IsNullOrWhiteSpace(Model.AllowedLinkDomains) ? $"Urls are restricted to the following domains: {Model.AllowedLinkDomains}" : null )" />
    </div>
</form>

<form asp-action="@(nameof(CarouselsController.DeleteItemButton))" method="post" role="form">
    <input id="deleteButtonCarousel" asp-for="CarouselId" type="hidden" />
    <input id="deleteButtonanguage" asp-for="LanguageId" type="hidden" />

    <input id="deleteButtonId" asp-for="CarouselButton.Id" type="hidden" />
    <input id="deleteButtonItem" asp-for="CarouselButton.CarouselItemId" type="hidden" />

    <div modal id="deleteButtonModal" name="Button" type="Ocuda.Utility.TagHelpers.ModalTypes.Delete"></div>
</form>

<div class="row pt-1">
    <div class="col-12">
        <select asp-for="SelectLanguage" asp-items="Model.LanguageList" formgroup></select>
    </div>
</div>

<div class="row pb-1">
    <div class="col-12 col-md-9 offset-md-3">
        <hr />
    </div>
</div>

<div class="row pb-1">
    <div class="col-12">
        <form asp-action="@nameof(CarouselsController.EditCarouselText)" method="post" role="form">
            <input asp-for="CarouselText.CarouselId" value="@Model.CarouselId" type="hidden" />
            <input asp-for="CarouselText.LanguageId" value="@Model.LanguageId" type="hidden" />

            <input asp-for="CarouselText.Title" value="@Model.Carousel.CarouselText?.Title" formgroup />

            <div class="row">
                <div class="offset-md-3 col-md-9">
                    @if (Model.PageLayoutId.HasValue)
                    {
                        <a asp-controller="@PagesController.Name"
                           asp-action="@nameof(PagesController.LayoutDetail)"
                           asp-route-id="@Model.PageLayoutId.Value"
                           class="btn btn-outline-secondary text-dark">Back</a>
                    }
                    else
                    {
                        <a asp-action="@nameof(CarouselsController.Index)"
                           class="btn btn-outline-secondary text-dark">Cancel</a>
                    }

                    <button type="submit" class="btn btn-success" buttonspinner>
                        Save
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="row pb-1">
    <div class="col-12">
        <hr />
        <button class="btn btn-outline-secondary text-dark"
                data-toggle="modal"
                data-target="#addItemModal">
            Add item
        </button>
    </div>
</div>

<div class="row">
    <div class="col-12">
        @foreach (var item in Model.Carousel.Items)
        {
            <div class="accordion mt-2" id="accordion@(item.Id)">
                <div class="card">
                    <div class="card-header d-flex" id="heading@(item.Id)">
                        <div class="h2 mb-0 flex-grow-1">
                            <button class="btn btn-link btn-block text-left"
                                    type="button"
                                    data-toggle="collapse"
                                    data-target="#collapse@(item.Id)"
                                    aria-controls="collapse@(item.Id)"
                                    aria-expanded="@(Model.FocusItemId == item.Id ? "true" : "false")">
                                @item.Name
                            </button>
                        </div>
                        <div>
                            <button class="btn btn-sm btn-secondary changeSort decreaseSortButton"
                                    data-id="@item.Id"
                                    data-increase="false"
                                    data-item="true"
                                    disabled="@(item.Id == Model.Carousel.Items.First().Id ? "disabled" : null)">
                                <span class="fas fa-arrow-up"></span>
                            </button>
                            <button class="btn btn-sm btn-secondary changeSort increaseSortButton"
                                    data-id="@item.Id"
                                    data-increase="true"
                                    data-item="true"
                                    disabled="@(item.Id == Model.Carousel.Items.Last().Id ? "disabled" : null)">
                                <span class="fas fa-arrow-down"></span>
                            </button>
                            <button class="btn btn-sm btn-danger"
                                    data-toggle="modal"
                                    data-target="#deleteItemModal"
                                    data-id="@item.Id"
                                    data-name="@item.Name">
                                <span class="fas fa-times"></span>
                            </button>
                        </div>
                    </div>
                    <div id="collapse@(item.Id)"
                         class="collapse p-2 @(Model.FocusItemId == item.Id ? "show" : null)"
                         data-parent="#accordion@(item.Id)"
                         aria-labelledby="heading@(item.Id)">
                        @if (Model.FocusItemId == item.Id && !string.IsNullOrWhiteSpace(Model.ItemErrorMessage))
                        {
                            <div class="row">
                                <div class="col-12 col-md-6 offset-md-3">
                                    <div class="alert alert-danger">@Model.ItemErrorMessage</div>
                                </div>
                            </div>
                        }
                        <form asp-controller="@CarouselsController.Name" asp-action="@nameof(CarouselsController.EditCarouselItemText)">
                            <input id="carouselItem@(item.Id)Carousel" asp-for="CarouselId" type="hidden" />

                            <input id="carouselItem@(item.Id)Id" asp-for="CarouselItemText.CarouselItemId" value="@item.Id" type="hidden" />
                            <input id="carouselItem@(item.Id)Language" asp-for="CarouselItemText.LanguageId" value="@(item.CarouselItemText?.LanguageId ?? Model.LanguageId)" type="hidden" />

                            <input id="carouselItem@(item.Id)Label" asp-for="CarouselItemText.Label" value="@item.CarouselItemText?.Label" formgroup />

                            <input id="carouselItem@(item.Id)ImageUrl" asp-for="CarouselItemText.ImageUrl" value="@item.CarouselItemText?.ImageUrl" formgroup
                                   info-tooltip="@(!string.IsNullOrWhiteSpace(Model.AllowedImageDomains) ? $"Images are restricted to the following domains: {Model.AllowedImageDomains}" : null )" />

                            <input id="carouselItem@(item.Id)Title" asp-for="CarouselItemText.Title" value="@item.CarouselItemText?.Title" formgroup />
                            <textarea id="carouselItem@(item.Id)Description" asp-for="CarouselItemText.Description" formgroup>@item.CarouselItemText?.Description</textarea>
                            <div class="row">
                                <div class="offset-md-3 col-md-9">
                                    <button type="submit" class="btn btn-success" button-spinner>
                                        Save
                                    </button>
                                </div>
                            </div>
                        </form>
                        <hr />
                        <button class="btn btn-outline-secondary text-dark"
                                data-toggle="modal"
                                data-target="#addButtonModal"
                                data-id="@item.Id">
                            Add button
                        </button>
                        @if (item.Buttons.Count > 0)
                        {
                            <div>
                                @foreach (var button in item.Buttons)
                                {
                                    <div class="card mt-2">
                                        <div class="card-body d-flex p-2">
                                            <div class="flex-grow-1">
                                                @button.Label.Name
                                            </div>
                                            <div>
                                                <button class="btn btn-sm btn-secondary changeSort decreaseSortButton"
                                                        data-id="@button.Id"
                                                        data-increase="false"
                                                        data-item="false"
                                                        disabled="@(button.Id == item.Buttons.First().Id ? "disabled" : null)">
                                                    <span class="fas fa-arrow-up"></span>
                                                </button>
                                                <button class="btn btn-sm btn-secondary changeSort increaseSortButton"
                                                        data-id="@button.Id"
                                                        data-increase="true"
                                                        data-item="false"
                                                        disabled="@(button.Id == item.Buttons.Last().Id ? "disabled" : null)">
                                                    <span class="fas fa-arrow-down"></span>
                                                </button>
                                                <button class="btn btn-sm btn-primary"
                                                        data-toggle="modal"
                                                        data-target="#editButtonModal"
                                                        data-id="@button.Id"
                                                        data-label="@button.LabelId"
                                                        data-url="@button.Url">
                                                    <span class="fas fa-pencil-alt"></span>
                                                </button>
                                                <button class="btn btn-sm btn-danger"
                                                        data-toggle="modal"
                                                        data-target="#deleteButtonModal"
                                                        data-id="@button.Id"
                                                        data-item="@button.CarouselItemId"
                                                        data-name="@button.Label.Name">
                                                    <span class="fas fa-times"></span>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts {
    <script>
        @if (Model.FocusItemId.HasValue)
        {
            <text>
            $(function () {
                var focusAccordion = $("#accordion@(Model.FocusItemId.Value)");
                if (focusAccordion.length > 0) {
                    $("#accordion@(Model.FocusItemId.Value)")[0].scrollIntoView();
                }
            });
            </text>
        }

        $("#SelectLanguage").on("change", function () {
            window.location.href = "@Url.Action(nameof(CarouselsController.Detail), new { id = Model.CarouselId})" + "?language=" + $(this).val();
        });

        $("#addItemForm").submit(function (e) {
            e.preventDefault();
            var form = $(this);
            $.post("@(Url.Action(nameof(CarouselsController.AddCarouselItem), CarouselsController.Name))",
                form.serialize(),
                function (response) {
                if (response.success == true) {
                    location.href = response.url;
                }
                else {
                    alert(response.message);
                    ResetSpinners(form.find(".btn-spinner"));
                }
            });
        });

        $("#deleteItemModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var id = button.data("id");
            var name = button.data("name");
            var modal = $(this);
            $("#deleteItemId").val(id);
            $("#deleteItemName").val(name);
            modal.find(".modal-text").text("Are you sure you want to delete \"" + name + "\"?");
        });

        $("#addButtonModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var id = button.data("id");

            $("#addButtonItem").val(id);
        });

        $("#addButtonForm").submit(function (e) {
            e.preventDefault();
            var form = $(this);
            $.post("@(Url.Action(nameof(CarouselsController.AddItemButton)))",
                form.serialize(),
                function (response) {
                if (response.success == true) {
                    location.href = response.url;
                }
                else {
                    alert(response.message);
                    ResetSpinners(form.find(".btn-spinner"));
                }
            });
        });

        $("#editButtonModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var id = button.data("id");
            var label = button.data("label");
            var url = button.data("url");

            $("#editButtonId").val(id);
            $("#editButtonLabel").val(label);
            $("#editButtonUrl").val(url);
        });

        $("#editButtonForm").submit(function (e) {
            e.preventDefault();
            var form = $(this);
            $.post("@(Url.Action(nameof(CarouselsController.EditItemButton)))",
                form.serialize(),
                function (response) {
                if (response.success == true) {
                    location.href = response.url;
                }
                else {
                    alert(response.message);
                    ResetSpinners(form.find(".btn-spinner"));
                }
            });
        });

        $("#deleteButtonModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var id = button.data("id");
            var itemId = button.data("item");
            var name = button.data("name");
            var modal = $(this);

            $("#deleteButtonId").val(id);
            $("#deleteButtonItem").val(itemId);
            modal.find(".modal-text").text("Are you sure you want to delete \"" + name + "\"?");
        });

        $(".changeSort").on("click", function () {
            var button = $(this);
            var id = button.data("id");
            var increase = button.data("increase");
            var item = button.data("item");
            var icon = button.children("span");
            if (icon.hasClass("fa-spinner") == false) {
                icon.removeClass("fa-arrow-up fa-arrow-down").addClass("fa-spinner fa-pulse");
                $.post("@Url.Action(nameof(CarouselsController.ChangeSort))",
                    { id, increase, item },
                    function (response) {
                        icon.removeClass("fa-spinner fa-pulse");
                        if (increase) {
                            icon.addClass("fa-arrow-down");
                        }
                        else {
                            icon.addClass("fa-arrow-up");
                        }
                        if (response.success) {
                            var row;
                            if (item) {
                                row = button.parents(".accordion");
                            }
                            else {
                                row = button.closest(".card");
                            }
                            if (increase) {
                                var nextRow = row.next();
                                row.insertAfter(nextRow);
                                row.find(".decreaseSortButton").removeAttr("disabled");
                                if (row.next().length == 0) {
                                    row.find(".increaseSortButton").attr("disabled", "disabled");
                                }
                                nextRow.find(".increaseSortButton").removeAttr("disabled");
                                if (nextRow.prev().length == 0) {
                                    nextRow.find(".decreaseSortButton").attr("disabled", "disabled");
                                }
                            }
                            else {

                                var prevRow = row.prev();
                                row.insertBefore(prevRow);
                                row.find(".increaseSortButton").removeAttr("disabled");
                                if (row.prev().length == 0) {
                                    row.find(".decreaseSortButton").attr("disabled", "disabled");
                                }
                                prevRow.find(".decreaseSortButton").removeAttr("disabled");
                                if (prevRow.next().length == 0) {
                                    prevRow.find(".increaseSortButton").attr("disabled", "disabled");
                                }
                            }
                        }
                        else {
                            alert(response.message);
                        }
                });
            }
        });
    </script>
} 