@model Ocuda.Ops.Controllers.Areas.Admin.ViewModels.Location.LocationViewModel
<html>
<body>
    <div class="container">
        <div class="location-save-container">
            <div class="location-save-message"></div>
        </div>
        <div class="row page-title">
            <div class="col-xs-12">
                @if (Model.Location.IsNewLocation)
                {
                    <h2>Add Location</h2>
                }
                else
                {
                    <h2>Edit Location - @Model.Location.Name</h2>
                }
            </div>
        </div>
        <form method="post" asp-controller="@LocationsController.Name" asp-action="@Model.Action" role="form" display="inline">
            <div class="row">
                <input value="@Model.Location.Id" asp-for="Location.Id" id="location-id" type="hidden" />
                <input value="@Model.Location.AdministrativeArea" asp-for="Location.AdministrativeArea" id="location-adminarea" type="hidden" />
                <input value="@Model.Location.CloseLocations" asp-for="Location.CloseLocations" id="location-closelocations" type="hidden" />
                <input value="@Model.Location.Country" asp-for="Location.Country" id="location-country" type="hidden" />
                <input value="@Model.Location.DefaultLibIds" asp-for="Location.DefaultLibIds" id="location-defaultLibIds" type="hidden" />
                <input value="@Model.Location.ImagePath" asp-for="Location.ImagePath" id="location-imagepath" type="hidden" />
                <input value="@Model.Location.IsAlwaysOpen" asp-for="Location.IsAlwaysOpen" id="location-isalwaysopen" type="hidden" />
                <input value="@Model.Location.Latitude" asp-for="Location.Latitude" id="location-lat" type="hidden" />
                <input value="@Model.Location.Longitude" asp-for="Location.Longitude" id="location-lng" type="hidden" />
                <input value="@Model.Location.Open" asp-for="Location.Open" type="hidden" />
                <input value="@Model.Location.PAbbreviation" asp-for="Location.PAbbreviation" id="location-paabbrev" type="hidden" />
                <input value="@Model.Location.ShowLocation" asp-for="Location.ShowLocation" id="location-showlocation" type="hidden" />
                <div class="col-xs-12">
                    <input value="@Model.Location.Name" asp-for="Location.Name" formgroup autocomplete="off" />
                    <div class="row">
                        <div class="col-xs-6">
                            <input value="@Model.Location.Stub" asp-for="Location.Stub" formgroup autocomplete="off" />
                        </div>
                        <div class="col-xs-6">
                            <input value="@Model.Location.Code" asp-for="Location.Code" formgroup autocomplete="off" />
                        </div>
                    </div>
                    <input value="@Model.Location.Address" asp-for="Location.Address" formgroup autocomplete="off" />
                    <div class="row">
                        <div class="col-xs-4">
                            <input value="@Model.Location.City" asp-for="Location.City" formgroup autocomplete="off" />
                        </div>
                        <div class="col-xs-4">
                            <input value="@Model.Location.State" asp-for="Location.State" formgroup autocomplete="off" />
                        </div>
                        <div class="col-xs-4">
                            <input value="@Model.Location.Zip" asp-for="Location.Zip" formgroup autocomplete="off" />
                        </div>
                    </div>
                    <input value="@Model.Location.MapLink" asp-for="Location.MapLink" formgroup autocomplete="off" />
                    <input type="tel" value="@Model.Location.Phone" asp-for="Location.Phone" formgroup autocomplete="off" />
                    <textarea id="comment location-description" asp-for="Location.Description" rows="5" formgroup autocomplete="off">@Model.Location.Description</textarea>
                    <input value="@Model.Location.Facebook" asp-for="Location.Facebook" formgroup autocomplete="off" />
                    <input value="@Model.Location.EventLink" asp-for="Location.EventLink" formgroup autocomplete="off" />
                    <input value="@Model.Location.SubscriptionLink" asp-for="Location.SubscriptionLink" formgroup autocomplete="off" />

                    <div class="form-group">
                        <a class="btn btn-secondary" id="return-home" asp-action="@nameof(LocationsController.Index)">Return to Locations</a>
                        @if (Model.Location.IsNewLocation)
                        {
                            <text>
                                <button type="submit" id="submit" value="Submit" class="btn btn-primary btn-spinner">
                                    <span class="buttonText">Add Location</span>
                                    <span class="fa fa-spinner fa-pulse fa-lg fa-fw d-none"></span>
                                </button>
                            </text>
                        }
                        else
                        {
                            <text>
                                <button type="submit" id="submit" value="Submit" class="btn btn-primary btn-spinner">
                                    <span class="buttonText">Update Location</span>
                                    <span class="fa fa-spinner fa-pulse fa-lg fa-fw d-none"></span>
                                </button>
                            </text>
                        }
                    </div>
                </div>
            </div>
        </form>
    </div>
    @section scripts{
        <script>
            $(document).ready(function () {

                var ulMapList = document.createElement("ul");
                ulMapList.classList.add("list-group");
                ulMapList.setAttribute("id","maplink-suggestions")
                $($("#Location_Address").parent()).append(ulMapList);

                var stubInfo = document.createElement("span");
                stubInfo.classList.add("fa-info-circle");
                stubInfo.classList.add("fas");
                stubInfo.setAttribute("data-toggle", "tooltip");
                stubInfo.setAttribute("href","#");
                stubInfo.setAttribute("id", "stub-info");
                stubInfo.setAttribute("title", "The stub is the nickname for the location");
                $($($($("#Location_Stub").parent()).parent()).children().first()).attr("id", "Location_Stub");
                $("#Location_Stub").append("&nbsp;");
                $("#Location_Stub").append(stubInfo);
                $('[data-toggle="tooltip"]').tooltip();

                $("#maplink-suggestions").on('click','li', function () {
                    var urlstring = $(this).find("a").data("maps-url");
                    var address = $(this).find("span.format-addr").text().split(", ");
                    if (address.length == 5) {
                        $("#Location_Address").val(address[1]);
                        $("#Location_City").val(address[2]);
                        $("#Location_Country").val(address[4]);
                        var stateZip = address[3].split(" ");
                        $($("input#Location_MapLink")[0]).val(urlstring);
                        $("#Location_State").val(stateZip[0]);
                        $("#Location_Zip").val(stateZip[1]);
                        $("#maplink-suggestions").html("");
                    }
                    else {
                        $("#Location_Address").val(address[0]);
                        $("#Location_City").val(address[1]);
                        $("#Location_Country").val(address[3]);
                        var stateZip = address[2].split(" ");
                        $($("input#Location_MapLink")[0]).val(urlstring);
                        $("#Location_State").val(stateZip[0]);
                        $("#Location_Zip").val(stateZip[1]);
                        $("#maplink-suggestions").html("");
                    }
                });
            });

            $("input#Location_Stub").blur(function () {
                $("input#Location_Stub").val($("input#Location_Stub").val().toLowerCase().replace(/\s/g, ''));
            });

            $("input#Location_Address").blur(function () {
                if ($('#Location_Address').val() && !$('#Location_MapLink').val())
                {
                    $("#maplink-suggestions").html("");
                    var data = {};
                    data["Address"] = $("#Location_Address").val();
                    data["City"] = $("#Location_City").val();
                    data["State"] = $("#Location_State").val();
                    data["Zip"] = $("#Location_Zip").val();
                    data["Country"] = $("#Location_Country").val();
                    var addressdata = JSON.stringify(data);

                    $.get("@Url.Action(nameof(LocationsController.GetUrlLocations))", { addressJson: addressdata }, function (response) {
                        if (response.success == true) {
                            var locations = $.parseJSON(response.data);
                            HandleGoogleLocations(locations);
                        }});
                }
                else
                {
                    $("#maplink-suggestions").html("");
                }
            });

            function HandleGoogleLocations(locations) {
                for (var index = 0; index < locations.length; index++)
                {
                    var link = document.createElement('a');
                    link.setAttribute("data-maps-url", locations[index].url);
                    link.setAttribute("data-address", locations[index].url);
                    link.setAttribute("data-city", locations[index].url);
                    link.setAttribute("data-state", locations[index].url);
                    link.setAttribute("data-zip",locations[index].url);
                    link.innerHTML = " <strong>" + locations[index].name + "</strong>";
                    link.classList.add("url-suggestion");
                    link.setAttribute("id", "list-item-" + index.toString());
                    link.setAttribute("role", "button");

                    var listitem = document.createElement("li");
                    listitem.classList.add("list-group-item");
                    listitem.classList.add("list-group-item-action");
                    listitem.classList.add("map-item");
                    var icon = document.createElement("span");
                    var formatAddr = document.createElement("span");
                    formatAddr.innerHTML = " "+locations[index].formatted_address;
                    formatAddr.setAttribute("class", "format-addr");
                    icon.classList.add("fas");
                    icon.classList.add("fa-map-marker-alt");
                    listitem.appendChild(icon);
                    listitem.appendChild(link);
                    listitem.appendChild(formatAddr);
                    document.getElementById("maplink-suggestions").appendChild(listitem);
                }
            }
        </script>
    }

</body>
</html>