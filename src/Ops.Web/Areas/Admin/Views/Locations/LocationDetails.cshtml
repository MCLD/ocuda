@model Ocuda.Ops.Controllers.Areas.Admin.ViewModels.Location.LocationViewModel
@section styles{
    <link rel="stylesheet" href="~/css/md.min.css" asp-append-version="true" />
}
<div class="modal fade" id="listAddModal" tabindex="-1" role="dialog" aria-labelledby="listModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="row">
            <div class="col-12 col-sm-10 col-sm-offset-1">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addModalTitle"></h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="modalItemList" class="col-12">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal" style="margin-right: 1em;">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="itemEditModal" tabindex="-1" role="dialog" aria-labelledby="listModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="row">
            <div class="col-12 col-sm-10 col-sm-offset-1">
                <form method="post" role="form" id="updateItem" asp-controller="@LocationsController.Name" asp-action="@nameof(LocationsController.EditLocationFeature)" novalidate="novalidate">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editModalTitle">Edit Feature</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div id="modalItemInfo" class="col-12 col">

                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal" style="margin-right: 1em;">Cancel</button>
                            <button type="submit" value="Submit" class="btn btn-primary" style="margin-right: 1em;">Save</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="listModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="row">
            <div class="col-12 col-sm-10 col-sm-offset-1">
                <div class="modal-content">
                    <div class="modal-header">
                        <span class="lead" id="editModalTitle"></span>
                    </div>
                    <div class="modal-body">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal" style="margin-right: 1em;">Cancel</button>
                        <button type="button" class="btn btn-danger" data-dismiss="modal" style="margin-right: 1em;">
                            <span class="buttonText">Delete</span>
                            <span class="fa fa-spinner fa-pulse fa-lg fa-fw d-none"></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="location-save-container">
    <div class="location-save-message"></div>
</div>

<div class="row page-title">
    <div class="col-12">
        <h1>@(Model.Location.IsNewLocation ? "Add Location" : "Edit " + Model.Location.Name)</h1>
    </div>
</div>


<form method="post"
      asp-controller="@LocationsController.Name"
      asp-action="@Model.Action"
      role="form"
      display="inline">
    <input asp-for="GroupList" type="hidden" />
    <input asp-for="FeatureList" type="hidden" />
    <input value="@Model.Location.Id" asp-for="Location.Id" id="location-id" type="hidden" />
    <input value="@Model.Location.Name" asp-for="Location.Name" formgroup autocomplete="off" />
    <input value="@Model.Location.Stub"
           asp-for="Location.Stub"
           info-tooltip="The stub is the nickname/URL for the location."
           on-blur-js="FormatStub"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.Code"
           asp-for="Location.Code"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.Address"
           asp-for="Location.Address"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.City" asp-for="Location.City" formgroup autocomplete="off" />
    <input value="@Model.Location.State" asp-for="Location.State" formgroup autocomplete="off" />
    <input value="@Model.Location.Zip" asp-for="Location.Zip" formgroup autocomplete="off" />
    <input value="@Model.Location.MapLink"
           asp-for="Location.MapLink"
           formgroup
           autocomplete="off" />
    <input type="tel"
           value="@Model.Location.Phone"
           asp-for="Location.Phone"
           formgroup
           autocomplete="off" />
    <textarea id="comment location-description"
              asp-for="Location.Description"
              rows="5"
              formgroup
              autocomplete="off"></textarea>
    <input value="@Model.Location.Facebook"
           asp-for="Location.Facebook"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.EventLink"
           asp-for="Location.EventLink"
           formgroup
           autocomplete="off" />
    <input value="@Model.Location.SubscriptionLink"
           asp-for="Location.SubscriptionLink"
           formgroup
           autocomplete="off" />
    <div class="row">
        <div class="col-md-9 offset-md-3">
            <a class="btn btn-secondary" id="return-home" asp-action="@nameof(LocationsController.Index)">Return to Locations</a>
            @if (Model.Location.IsNewLocation)
            {
                <text>
                    <button type="submit" id="submit" value="Submit" class="btn btn-success btn-spinner">
                        <span class="buttonText">Add Location</span>
                        <span class="fa fa-spinner fa-pulse fa-lg fa-fw d-none"></span>
                    </button>
                </text>
            }
            else
            {
                <text>
                    <button type="submit" id="submit" value="Submit" class="btn btn-success btn-spinner">
                        <span class="buttonText">Update Location</span>
                        <span class="fa fa-spinner fa-pulse fa-lg fa-fw d-none"></span>
                    </button>
                </text>
            }
        </div>
    </div>
    @if (!Model.Location.IsNewLocation)
    {
<div class="col-3 card">
    <div class="card-header">
        <h4 style="margin: 0; display: initial;">Hours</h4>
        <button type="button" id="editHoursButton" class="btn btn-warning" style="float:right;">Edit Hours</button>
    </div>
    @if (Model.Location.IsAlwaysOpen)
    {
        <p>Always Open</p>
    }
    else
    {
        <table class="table table-sm table-bordered">
            <tr>
                <td>
                    @foreach (var time in Model.Location.LocationHours)
                    {
                        <text>
                            <p>@time</p>
                        </text>
                    }
                </td>
            </tr>
        </table>
    }
</div>
        <div class="col-6 card">
            <div class="card-header">
                <h4 style="margin: 0; display: initial;">Features</h4>
                <button type="button" id="addFeatureButton" class="btn btn-warning" style="float:right;">Add Feature</button>
            </div>
            @if (Model.LocationFeatures.Any())
            {
                <table class="table table-sm table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Custom Text</th>
                            <th>Redirect URL</th>
                            <th width="44px">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody id="featureList">
                        @foreach (var locationFeature in Model.LocationFeatures)
                        {
                            @foreach (var feature in Model.Features.Where(_ => _.Id == locationFeature.FeatureId))
                            {
                                <tr>
                                    <td class="td-class feature-item" data-locationFeatureId="@locationFeature.Id">@feature.Name</td>
                                    <td style="vertical-align:middle;">
                                        @if (!string.IsNullOrEmpty(locationFeature.Text))
                                        {
                                            @if (locationFeature.Text.Length > 200)
                                            {
                                                @(locationFeature.Text.Substring(0, 200) + "...")
                                            }
                                            else
                                            {
                                                @locationFeature.Text
                                            }
                                        }
                                    </td>
                                    <td style="vertical-align:middle;">@locationFeature.RedirectUrl</td>
                                    <td><button type="button" class="btn btn-link btn-xs deleteFeatureButton" data-locationFeatureId="@locationFeature.Id" data-featureName="@feature.Name"><span class="fa fa-2x fas fa-minus-circle text-danger" aria-hidden="true"></span></button></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            }
            else
            {
                @:<ul class="list-group" id="nofeatures"><li class="list-group-item">No Features</li></ul>
            }
        </div>
        <div class="col-6 card">
            <div class="card-header">
                <h4 style="margin: 0; display: initial;">Groups</h4>
                <button type="button" id="addGroupButton" class="btn btn-warning" data-toggle="modal" style="float:right;">Add Group</button>
            </div>
            @if (Model.LocationGroups.Any())
            {
                <table class="table table-sm table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Group Type</th>
                            <th>Location Region?</th>
                            <th width="44px">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody id="groupList">
                        @foreach (var locationGroup in Model.LocationGroups)
                        {
                            @foreach (var group in Model.Groups.Where(_ => _.Id == locationGroup.GroupId))
                            {
                                <tr>
                                    <td style="vertical-align:middle;" class="group-item" data-locationgroupid="@locationGroup.Id">@group.GroupType</td>
                                    @if (group.IsLocationRegion)
                                    {
                                        <td class="text-center" style="vertical-align:middle;"><span class="fas fa-check"></span></td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                    <td><button type="button" class="btn btn-link btn-xs deletegroupButton" data-locationgroupid="@locationGroup.Id" data-groupname="@group.GroupType"><span class="fa fa-2x fas fa-minus-circle text-danger" aria-hidden="true"></span></button></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            }
            else
            {
                @:<ul class="list-group" id="noGroups"><li class="list-group-item">No Groups</li></ul>
            }
        </div>
    }
</form>

@section scripts{
    <script src="~/js/md.min.js" asp-append-version="true"></script>
    <script>
            var groupIds = $("#GroupList").val().split(',').filter(function (x) { return x }).map(Number);
            var featureIds = $("#FeatureList").val().split(',').filter(function (x) { return x }).map(Number);
            var itemUrl = "@nameof(LocationsController.GetItemsList)";
            var page = 1;

            function FormatStub(object) {
                updateStub($(object), $(object).val());
            }
            $(function () {
                $('[data-toggle="tooltip"]').tooltip();
                var ulMapList = document.createElement("ul");
                ulMapList.classList.add("list-group");
                ulMapList.setAttribute("id", "maplink-suggestions");
                $($("#Location_Address").parent()).append(ulMapList);
            });
            function InitMarkDown() {
                if (typeof Markdown != "undefined") {
                    var editor = new Markdown.Editor({ allowUploads: false });
                    editor.run();
                }
            }
        @if (!Model.Location.IsNewLocation)
        {
            <text>
            function GetItemList(objType) {
                if (objType == "Group") {
                    $.get("@Url.Action(nameof(LocationsController.GetItemsList))",
                        {
                            itemIds: groupIds.join(','),
                            objectType: "Group",
                            page: page
                        }, function (response) {
                            $("#modalItemList").html(response);
                        });
                }
                else if (objType == "Feature") {
                    $.get("@Url.Action(nameof(LocationsController.GetItemsList))",
                        {
                            itemIds: featureIds.join(','),
                            objectType: "Feature",
                            page: page
                        }, function (response) {
                            $("#modalItemList").html(response);
                        });
                }
            }
            function GetEditInfo(item, objType) {
                if (objType == "Group") {
                    $.get("@Url.Action(nameof(LocationsController.GetItemInfo))",
                        {
                            itemId: item,
                            objectType: objType,
                            locationStub: "@Model.Location.Stub"
                        }, function (response) {
                            $("#modalItemInfo").html(response);
                        });
                }
                else if (objType == "Feature") {
                    $.get("@Url.Action(nameof(LocationsController.GetItemInfo))",
                        {
                            itemId: item,
                            objectType: objType,
                            locationStub: "@Model.Location.Stub"
                        }, function (response) {
                            $("#modalItemInfo").html(response);
                        }).done(function () {
                            InitMarkDown();
                        });
                }
                else {
                    $.get("@Url.Action(nameof(LocationsController.GetItemInfo))",
                        {
                            itemId: 0,
                            objectType: objType,
                            locationStub: "@Model.Location.Stub"
                        }, function (response) {
                            $("#modalItemInfo").html(response);
                        });
                }
            }
            function CreateLocationObject(itemid, objType) {
                if (objType == "Group") {
                    $.post("@Url.Action(nameof(LocationsController.CreateLocationGroup))",
                        {
                            locationId: @Model.Location.Id,
                            groupId: itemid,
                        }, function () {
                            $("#listAddModal").modal('hide');
                            window.location.reload();
                        });
                }
                else {
                    $.post("@Url.Action(nameof(LocationsController.CreateLocationFeature))",
                        {
                            locationId: @Model.Location.Id,
                            featureId: itemid,
                        }, function () {
                            $("#listAddModal").modal('hide');
                            window.location.reload();
                        });
                }
            }

            function DeleteLocationObject(itemId, objType) {
                if (objType == "Group") {
                    $.post("@Url.Action(nameof(LocationsController.DeleteLocationGroup))",
                        {
                            locationgroupId: itemId
                        }, function () {
                            $("#deleteModal").modal('hide');
                            window.location.reload();
                        });
                }
                else {
                    $.post("@Url.Action(nameof(LocationsController.DeleteLocationFeature))",
                        {
                            locationfeatureId: itemId
                        }, function () {
                            $("#deleteModal").modal('hide');
                            window.location.reload();
                        });
                }
            }
            $("#addGroupButton").on('click', function (e) {
                $("#listAddModal").modal("show");
                $("#addModalTitle").text("Add a group");
                $("#addModalTitle").attr("data-objType", "Group");
                GetItemList("Group");
            });
            $("#addFeatureButton").on('click', function (e) {
                $("#listAddModal").modal("show");
                $("#addModalTitle").text("Add a feature");
                $("#addModalTitle").attr("data-objType", "Feature");
                GetItemList("Feature");
            });
            $(document).on('click', "#confirmDeleteGroup", function () {
                DeleteLocationObject($(this).data('locationgroupid'), "Group")
            });
            $(document).on('click', "#confirmDeleteFeature", function () {
                DeleteLocationObject($(this).data('locationfeatureid'), "Feature")
            });
            $(document).on("click", ".addgroupButton", function () {
                groupIds.push($(this).data("groupid"));
                $("#GroupList").val(groupIds.join(','));
                $(".addgroupButton").addClass("disabled");
                CreateLocationObject($(this).data("groupid").toString(), "Group");
            });
            $("#updateItem").on("hidden.bs.modal", function () {
                $("#updateItem").find(".modal-body").html("");
            });
            $(document).on("click", ".addfeatureButton", function () {
                groupIds.push($(this).data("featureid"));
                $("#FeatureList").val(groupIds.join(','));
                $(".addfeatureButton").addClass("disabled");
                CreateLocationObject($(this).data("featureid").toString(), "Feature");
            });
            $(".group-item").on('click', function (e) {
                @foreach(var locationgroup in Model.LocationGroups)
                {
                    <text>
                if (@locationgroup.Id == parseInt($(this).data("locationgroupid"))) {
                            @foreach(var group in Model.Groups.Where(_ => _.Id == locationgroup.GroupId))
                            {
                                @:$("#editModalTitle").text("Edit Group: @group.GroupType");
                            }
                }
                    </text>
                }
                $("#itemEditModal").modal("show");
                $("#updateItem").attr("action", "@Url.Action(nameof(LocationsController.EditLocationGroup),LocationsController.Name)");
                $('#updateItem').attr('name', 'groups');
                GetEditInfo($(this).data("locationgroupid"), "Group");
            });
            $("#updateItem").submit(function() {
                if ($("#updateItem").attr("name") == "hours" && !$("#accordion-header").hasClass("bg-info")) {
                    $("#Group_SubscriptionUrl").val("");
                    $("#group-isLocationRegion").val("False");
                }
            });
            $(".feature-item").on('click', function (e) {
                @foreach(var locationfeature in Model.LocationFeatures)
                {
                    <text>
                if (@locationfeature.Id == parseInt($(this).data("locationfeatureid"))) {
                            @foreach(var feature in Model.Features.Where(_ => _.Id == locationfeature.FeatureId))
                            {
                                @:$("#editModalTitle").text("Edit Feature: @feature.Name");
                            }
                }
                    </text>
                }
                $("#itemEditModal").modal("show");
                $('#updateItem').attr('name', 'features');
                $("#updateItem").attr("action", "@Url.Action(nameof(LocationsController.EditLocationFeature),LocationsController.Name)");
                GetEditInfo($(this).data("locationfeatureid"), "Feature");
            });
            $("#editHoursButton").on('click', function (e) {
                $("#editModalTitle").text("Edit @Model.Location.Name's Hours");
                $("#itemEditModal").modal("show");
                $("#updateItem").attr("action", "@Url.Action(nameof(LocationsController.EditLocationHours),LocationsController.Name)");
                $('#updateItem').attr('name', 'hours');
                GetEditInfo(null, "Hours");
            });
            $(document).on("click", "div.hours-item", function (e) {
                var button = $("#hour-selector-" + $(this).data("hourid"));
                button.data("isopen", $(this).data("hourval"));
                button.text($(this).text());
                var index = $(this).data("indexval");
                if ($(this).data("hourval") == "1") {
                    button.removeClass("btn-danger");
                    button.addClass("btn-success");
                    $("#hour-inputs-" + $(this).data("hourid")).removeClass("d-none");
                    $("#AllLocationHours_" + index + "__Open").prop('checked', true);
                    $("#AllLocationHours_"+index+"__Open").val( true);
                }
                else {
                    button.removeClass("btn-success");
                    button.addClass("btn-danger");
                    $("#hour-inputs-" + $(this).data("hourid")).addClass("d-none");
                    $("#AllLocationHours_" + index + "__Open").prop('checked', false);
                    $("#AllLocationHours_"+index+"__Open").val(false);
                }
            });

            $(document).on("click", "#removeGroupButton", function () {
                groupIds.splice(groupIds.indexOf($(this).data("locationgroupid")), 1);
                $("#GroupList").val(groupIds.join(','));
                $(this).parent().parent().remove();
                if (groupIds.length == 0)
                {
                    $("#noItems").removeClass("hide");
                }
            });
            $(document).on("click", "#removeFeatureButton", function () {
                featureIds.splice(featureIds.indexOf($(this).data("locationfeatureid")), 1);
                $("#FeatureList").val(featureIds.join(','));
                $(this).parent().parent().remove();
                if (featureIds.length == 0)
                {
                    $("#noItems").removeClass("hide");
                }
            });
            $(document).on('click', "button.page-link", function (e) {
                $.get("@Url.Action(nameof(LocationsController.GetItemsList))",
                {
                    itemIds: featureIds.join(','),
                    objectType: $("#addModalTitle").data("objType"),
                    page: $(this).data("page")
                }, function(response) {
                    $("#modalItemList").html(response);
                });
            });

            $('.deletegroupButton').on('click', function () {
                $($("#deleteModal").find("button.btn-danger")).attr("data-locationgroupid",$(this).data("locationgroupid").toString());
                $($("#deleteModal").find("button.btn-danger")).attr("id", "confirmDeleteGroup")
                $("#deleteModal").find(".modal-body").html("Are you sure you want to remove the group '<strong>" + $(this).data("groupname") + "</strong>' from '<strong>@Model.Location.Name</strong>'")
                $("#deleteModal").modal("show");
            });
            $('.deleteFeatureButton').on('click', function () {
                $($("#deleteModal").find("button.btn-danger")).attr("data-locationfeatureId",$(this).data("locationfeatureid").toString());
                $($("#deleteModal").find("button.btn-danger")).attr("id", "confirmDeleteFeature")
                $("#deleteModal").find(".modal-body").html("Are you sure you want to remove the feature '<strong>" + $(this).data("featurename") + "</strong>' from '<strong>@Model.Location.Name</strong>'")
                $("#deleteModal").modal("show");
            });
            </text>
    }
    // For Google Maps
    $(document).on('click','#maplink-suggestions li', function () {
        var urlstring = $(this).find("a").data("maps-url");
        var address = $(this).find("span.format-addr").text().split(", ");
        if (address.length == 5) {
            $("#Location_Address").val(address[1]);
            $("#Location_City").val(address[2]);
            $("#Location_Country").val(address[4]);
            var stateZip = address[3].split(" ");
            $($("input#Location_MapLink")[0]).val(urlstring);
            $("#Location_State").val(stateZip[0]);
            $("#Location_Zip").val(stateZip[1]);
            $("#maplink-suggestions").html("");
        }
        else {
            $("#Location_Address").val(address[0]);
            $("#Location_City").val(address[1]);
            $("#Location_Country").val(address[3]);
            var stateZip = address[2].split(" ");
            $($("input#Location_MapLink")[0]).val(urlstring);
            $("#Location_State").val(stateZip[0]);
            $("#Location_Zip").val(stateZip[1]);
            $("#maplink-suggestions").html("");
        }
    });
    $("input#Location_Address").blur(function () {
        if ($('#Location_Address').val() && !$('#Location_MapLink').val())
        {
            $("#maplink-suggestions").html("");
            var data = {};
            data["Address"] = $("#Location_Address").val();
            data["City"] = $("#Location_City").val();
            data["State"] = $("#Location_State").val();
            data["Zip"] = $("#Location_Zip").val();
            data["Country"] = $("#Location_Country").val();
            var addressdata = JSON.stringify(data);

            $.get("@Url.Action(nameof(LocationsController.GetUrlLocations))", { addressJson: addressdata }, function (response) {
                if (response.success == true) {
                    var locations = $.parseJSON(response.data);
                    HandleGoogleLocations(locations);
            }});
        }
        else
        {
            $("#maplink-suggestions").html("");
        }
    });
    function HandleGoogleLocations(locations) {
        for (var index = 0; index < locations.length; index++)
        {
            var link = document.createElement('a');
            link.setAttribute("data-maps-url", locations[index].url);
            link.setAttribute("data-address", locations[index].url);
            link.setAttribute("data-city", locations[index].url);
            link.setAttribute("data-state", locations[index].url);
            link.setAttribute("data-zip",locations[index].url);
            link.innerHTML = " <strong>" + locations[index].name + "</strong>";
            link.classList.add("url-suggestion");
            link.setAttribute("id", "list-item-" + index.toString());
            link.setAttribute("role", "button");

            var listitem = document.createElement("li");
            listitem.classList.add("list-group-item");
            listitem.classList.add("list-group-item-action");
            listitem.classList.add("map-item");
            var icon = document.createElement("span");
            var formatAddr = document.createElement("span");
            formatAddr.innerHTML = " "+locations[index].formatted_address;
            formatAddr.setAttribute("class", "format-addr");
            icon.classList.add("fas");
            icon.classList.add("fa-map-marker-alt");
            listitem.appendChild(icon);
            listitem.appendChild(link);
            listitem.appendChild(formatAddr);
            document.getElementById("maplink-suggestions").appendChild(listitem);
        }
    }
    </script>
}