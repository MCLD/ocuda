@model Ocuda.Ops.Controllers.Areas.Admin.ViewModels.Files.CategoriesViewModel

<form id="addForm" role="form">
    <input asp-for="@Model.SectionId" type="hidden" />
    <input id="addCurrentPage" asp-for="PaginateModel.CurrentPage" type="hidden" />
    <div modal id="addModal" name="File Category" type="Ocuda.Utility.TagHelpers.ModalTypes.Add">
        <input id="addName" asp-for="Category.Name" formgroup />
        <select id="addThumbnail" class="w-auto" asp-for="Category.ThumbnailRequired" formgroup>
            <option value="False">Not Required</option>
            <option value="True">Required</option>
        </select>
        <select id="addFileTypes" name="addFileTypes[]" asp-for="FileTypes" multiple="multiple" formgroup>
            @foreach (var fileType in Model.FileTypes)
            {
                <option value="@fileType.Id">@fileType.Extension</option>
            }
        </select>
    </div>
</form>

<form id="editForm" role="form">
    <input id="editCurrentPage" asp-for="PaginateModel.CurrentPage" type="hidden" />
    <input id="editId" asp-for="Category.Id" type="hidden" />
    <div modal id="editModal" name="File Category" type="Ocuda.Utility.TagHelpers.ModalTypes.Edit">
        <input id="editName" asp-for="Category.Name" formgroup />
        <select id="editThumbnail" class="w-auto" asp-for="Category.ThumbnailRequired" formgroup>
            <option value="False">Not Required</option>
            <option value="True">Required</option>
        </select>
        <select id="editFileTypes" name="editFileTypes[]" asp-for="FileTypes" multiple="multiple" formgroup>
            @foreach (var fileType in Model.FileTypes)
            {
                <option value="@fileType.Id">@fileType.Extension</option>
            }
        </select>
    </div>
</form>

<form id="deleteForm" asp-controller="Files" asp-action="@(nameof(FilesController.DeleteCategory))" role="form">
    <input id="deleteCurrentPage" asp-for="PaginateModel.CurrentPage" type="hidden" />
    <input id="deleteName" asp-for="Category.Name" type="hidden" />
    <input id="deleteId" asp-for="Category.Id" type="hidden" />
    <div modal id="deleteModal" name="File Category" type="Ocuda.Utility.TagHelpers.ModalTypes.Delete"></div>
</form>

<div class="mb-2">
    <button class="btn btn-outline-secondary text-dark"
            data-toggle="modal"
            data-target="#addModal">
        Add New Category
    </button>
    <a class="btn btn-secondary float-right" asp-action="@(nameof(FilesController.Index))">Manage Files</a>
</div>

@if (Model.Categories.Count() == 0)
{
    <div class="alert alert-warning">No Categories Found</div>
}
else
{
    <table class="table table-sm table-bordered table-striped">
        <thead>
            <tr>
                <th>Category</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in Model.Categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td align="center">
                        <button type="button"
                                class="btn btn-info btn-xs"
                                data-toggle="modal"
                                data-target="#editModal"
                                data-id="@category.Id"
                                data-category="@category.Name"
                                data-thumbnail="@category.ThumbnailRequired">
                            <span class="fa fa-pencil-alt" aria-hidden="true"></span>
                        </button>
                        <button type="button"
                                class="btn btn-danger btn-xs"
                                data-toggle="modal"
                                data-target="#deleteModal"
                                data-id="@category.Id"
                                data-category="@category.Name">
                            <span class="fa fa-times" aria-hidden="true"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @if (Model.PaginateModel.MaxPage > 1)
    {
        <paginate paginateModel="@Model.PaginateModel"></paginate>
    }
}

@section scripts
    {
    <script>
        $(document).ready(function () {
            $('#addFileTypes').multiselect({
                maxHeight: 200,
                includeSelectAllOption: true
            });
            $('#editFileTypes').multiselect({
                maxHeight: 200,
                includeSelectAllOption: true,
                selectedClass: 'multiselect-selected'
            });
        });

        $("#addForm").submit(function (e) {
            e.preventDefault();
            var name = $('#addName').val();
            var thumbnail = $('#addThumbnail').val();
            var sectionId = $('#SectionId').val();
            var selectedTypes = $('#addFileTypes')[0].selectedOptions;
            var selectedTypeIds = [];

            $.each(selectedTypes, function (index) {
                selectedTypeIds[index] = $(selectedTypes[index]).val();
            });

            $.post("@(Url.Action("CreateCategory", "Files"))",
                { name: name, sectionId: sectionId, thumbnail: thumbnail, fileTypeIds: selectedTypeIds },
                function (response) {
                    if (response.success == true) {
                        location.reload();
                    }
                    else {
                        alert(response.message);
                        ResetSpinners();
                    }
                });
        });

        $("#editForm").submit(function (e) {
            e.preventDefault();
            var id = $("#editId").val();
            var name = $('#editName').val();
            var thumbnail = $('#editThumbnail').val();
            var selectedTypes = $('#editFileTypes')[0].selectedOptions;
            var selectedTypeIds = [];

            $.each(selectedTypes, function (index) {
                selectedTypeIds[index] = $(selectedTypes[index]).val();
            });

            $.post("@(Url.Action("EditCategory", "Files"))",
                { id: id, name: name, thumbnail: thumbnail, fileTypeIds: selectedTypeIds },
                function (response) {
                    if (response.success == true) {
                        location.reload();
                    }
                    else {
                        alert(response.message);
                        ResetSpinners();
                    }
                });
        });

        $("#editModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var id = button.data("id");
            var category = button.data("category");
            var thumbnail = button.data("thumbnail");
            var editFileTypes = $('#editFileTypes');
            var modal = $(this);
            $("#editId").val(id);
            modal.find("#editName").val(category);
            modal.find("#editThumbnail").val(thumbnail);
            editFileTypes.multiselect('deselectAll', false);
            editFileTypes.multiselect('updateButtonText');

            var inputs = editFileTypes.parent(".multiselect-native-select").find("input");
            $.each(inputs, function (index) {
                var input = $(inputs[index]);
                input.prop("disabled", false);
                input.parent("li").removeClass("disabled");
            });

            $.post("@(Url.Action("GetCategoryFileTypes", "Files"))",
                { categoryId: id },
                function (response) {
                    if (response.success == true) {
                        editFileTypes.multiselect('select', response.fileTypeIds);
                        var typesInUse = response.fileTypeIdsInUse;
                        $.each(typesInUse, function (index) {
                            var input = editFileTypes.parent(".multiselect-native-select")
                                .find(".multiselect-selected")
                                .find("input[value=\"" + typesInUse[index] + "\"]");
                            input.prop("disabled", true);
                            input.parent("li").addClass("disabled");
                         });
                    }
                    else {
                        alert(response.message);
                    }
                });

        });

        $("#deleteModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var id = button.data("id");
            var category = button.data("category");
            var modal = $(this);
            $("#deleteName").val(category);
            $("#deleteId").val(id);
            modal.find(".modal-text").text(" Are you sure you want to delete \"" + category + "\"?");
        });
    </script>
}
