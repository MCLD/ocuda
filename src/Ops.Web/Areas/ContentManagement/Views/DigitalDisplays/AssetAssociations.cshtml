@model AssetAssociationViewModel

@using Ocuda.Ops.Controllers.Areas.ContentManagement.ViewModels.DigitalDisplays

<div class="row">
    <div class="col-sm-7">
        <h1>Digital Display Asset Associations</h1>
    </div>
    <div class="col-sm-5">
        <a class="btn btn-outline-dark mt-2 mb-1 ml-2 float-right"
           asp-controller="@Ocuda.Ops.Controllers.Areas.ContentManagement.DigitalDisplaysController.Name"
           asp-action="@(nameof(Ocuda.Ops.Controllers.Areas.ContentManagement.DigitalDisplaysController.Assets))">Back</a>
    </div>
</div>

@await Html.PartialAsync("_DigitalDisplaysPartial")

<div class="toast"
     role="alert"
     aria-live="assertive"
     aria-atomic="true"
     id="successAlert"
     data-delay="5000"
     style="position: absolute; top: 4rem; right: 6rem;">
    <div class="toast-header">
        <strong class="mr-auto text-success">Success</strong>
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="toast-body">
        Asset assocation for set <strong id="toastSet"></strong> updated!
        <span id="toastSupplemental"></span>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        @if (!string.IsNullOrEmpty(Model.ImageUrl))
        {
            <a href="@Model.ImageUrl" target="_blank">
                <img src="@Model.ImageUrl" class="img-fluid" />
            </a>
        }
        else
        {
            <span class="text-danger">Missing asset</span>
        }
    </div>
    <div class="col-md-8">
        <table class="table table-bordered table-sm">
            <tr>
                <th>Name</th>
                <td>@Model.DigitalDisplayAsset.Name</td>
            </tr>
            <tr>
                <th>Uploaded by</th>
                <td>
                    Uploaded by:
                    <a asp-controller="@Ocuda.Ops.Controllers.ProfileController.Name"
                       asp-action="@nameof(Ocuda.Ops.Controllers.ProfileController.Index)"
                       asp-route-id="@Model.DigitalDisplayAsset.CreatedByUser.Username"
                       target="_blank">@Model.DigitalDisplayAsset.CreatedByUser.Name</a><br />
                </td>
            </tr>
            <tr>
                <th>Uploaded at</th>
                <td>@Model.DigitalDisplayAsset.CreatedAt</td>
            </tr>
            <tr>
                <th>Browser time zone</th>
                <td class="oc-timezone"></td>
            </tr>
        </table>
    </div>
</div>

<table class="table table-bordered table-sm mt-2">
    <thead>
        <tr>
            <th>Set</th>
            <th>Start Date</th>
            <th>Start Time</th>
            <th>End Date</th>
            <th>End Time</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model?.DigitalDisplaySets.Count > 0)
        {
            @foreach (var set in Model.DigitalDisplaySets)
            {
                var assetSet = Model.DigitalDisplayAssetSets.SingleOrDefault(_ => _.DigitalDisplaySetId == set.Id);
                <tr data-set-group="@set.Id">
                    <td class="align-middle"><span name="setName">@set.Name</span></td>
                    <td class="align-middle">
                        <input type="date"
                               name="startDate"
                               class="form-control"
                               value="@assetSet?.StartDate.ToString("yyyy-MM-dd")" />
                    </td>
                    <td class="align-middle">
                        <input type="time"
                               name="startTime"
                               class="form-control"
                               value="@assetSet?.StartDate.ToString("HH:mm")" />
                    </td>
                    <td class="align-middle">
                        <input type="date"
                               name="endDate"
                               class="form-control"
                               value="@assetSet?.EndDate.ToString("yyyy-MM-dd")" />
                    </td>
                    <td class="align-middle">
                        <input type="time"
                               name="endTime"
                               class="form-control"
                               value="@assetSet?.EndDate.ToString("HH:mm")" />
                    </td>
                    <td>
                        <button type="button"
                                name="save"
                                data-assetid="@Model.DigitalDisplayAsset.Id"
                                class="oc-update-asset-associations btn btn-outline-secondary my-1"
                                button-spinner>
                            <span class="far fa-save"></span>
                        </button>
                        @if (Model?.DigitalDisplaySets.Count > 1)
                        {
                            <button type="button"
                                    title="Apply this date and time to all rows"
                                    class="oc-apply-to-all btn btn-outline-secondary my-1"
                                    button-spinner>
                                <span class="far fa-copy"></span>
                            </button>
                        }
                        <button type="button"
                                title="Delete this asset"
                                data-assetid="@Model.DigitalDisplayAsset.Id"
                                class="oc-delete-asset btn btn-outline-danger my-1 @(assetSet?.IsEnabled == true ? "" : "d-none")"
                                button-spinner>
                            <span class="fas fa-minus-circle"></span>
                        </button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr class="table-warning">
                <td colspan="7">
                    No digital display asset sets found.
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade"
     id="issueModal"
     data-backdrop="static"
     data-keyboard="false"
     tabindex="-1"
     aria-labelledby="issueLabel"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="issueLabel">Asset assocation issue</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Could not update asset assocation:
                <ul id="issueList">
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $().ready(function () {
            const tzNegativeMinutes = new Date().getTimezoneOffset();
            const h = Math.floor(Math.abs(tzNegativeMinutes) / 60)
            const m = Math.floor(Math.abs(tzNegativeMinutes) - (h * 60))
            const s = tzNegativeMinutes > 0 ? '-' : ''
            $('.oc-timezone').text(s + h + ":" + m.toString().padStart(2, '0'))
        })

        $('.oc-apply-to-all').on('click', function (event) {
            const button = event.currentTarget
            $(button).prop('disabled', true);
            const tr = $(button).parents('tr')
            const currentSetId = $(tr).attr('data-set-group')
            const startDate = $(tr).find('input[name="startDate"]').val()
            $('input[name="startDate"]').each(function (item) {
                $(this).val(startDate)
            })
            const startTime = $(tr).find('input[name="startTime"]').val()
            $('input[name="startTime"]').each(function (item) {
                $(this).val(startTime)
            })
            const endDate = $(tr).find('input[name="endDate"]').val()
            $('input[name="endDate"]').each(function (item) {
                $(this).val(endDate)
            })
            const endTime = $(tr).find('input[name="endTime"]').val()
            $('input[name="endTime"]').each(function (item) {
                $(this).val(endTime)
            })
            const enabled = true
            $('input[name="assetEnabled"]').each(function (item) {
                $(this).prop('checked', enabled);
            })
            $('button[name="save"]').each(function (item) {
                const tr = $(this).parents('tr')
                const parentSetId = $(tr).attr('data-set-group')
                if (currentSetId !== parentSetId) {
                    $(tr).addClass('table-warning')
                    $(this).addClass('btn-outline-primary').removeClass('btn-outline-secondary')
                }
            })
            ResetSpinners($(button))
            $(button).prop('disabled', false);
        })

        $('.oc-delete-asset').on('click', function (event) {
            const button = event.currentTarget
            $(button).prop('disabled', true)
            var update = new Object();
            const tr = $(button).parents('tr')
            update.SetId = $(tr).attr('data-set-group')
            update.AssetId = $(button).data('assetid')
            update.Enabled = false
            $.ajax({
                type: 'POST',
                url: '@Url.Action(nameof(DigitalDisplaysController.UpdateAssetAssocations))',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(update),
                success: function (data, textStatus, jqXHR) {
                    if (!data.success) {
                        displayErrors('An error occurred: ' + data.message)
                    }
                    else
                    {
                        $('#toastSet').text($(tr).find('span[name="setName"]').text())
                        $('#toastSupplemental').text(data.message)
                        $('#successAlert').toast('show')
                        $(tr).find('input[name="startDate"]').val('')
                        $(tr).find('input[name="startTime"]').val('')
                        $(tr).find('input[name="endDate"]').val('')
                        $(tr).find('input[name="endTime"]').val('')
                        $(tr).find('.oc-delete-asset').addClass('d-none')
                        $(tr).removeClass('table-warning')
                        $(button).addClass('btn-outline-secondary').removeClass('btn-outline-primary')
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    displayErrors('An error occurred - ' + textStatus + ': ' + errorThrown);
                },
                complete: function (jqXHR, textStatus) {
                    ResetSpinners($(button))
                    $(button).prop('disabled', false);
                }
            })
        })

        $('.oc-update-asset-associations').on('click', function (event) {
            const button = event.currentTarget
            $(button).prop('disabled', true)
            var update = new Object();
            const tr = $(button).parents('tr')
            update.SetId = $(tr).attr('data-set-group')
            update.AssetId = $(button).data('assetid')
            update.StartDate = $(tr).find('input[name="startDate"]').val()
            update.StartTime = $(tr).find('input[name="startTime"]').val()
            update.EndDate = $(tr).find('input[name="endDate"]').val()
            update.EndTime = $(tr).find('input[name="endTime"]').val()
            update.Enabled = true
            const validated = validate(update);
            if (validated.length === 0) {
                update.StartDateTimeUTC = new Date(update.StartDate + 'T' + update.StartTime);
                update.EndDateTimeUTC = new Date(update.EndDate + 'T' + update.EndTime);
                update.TimeZoneOffsetMinutes = new Date().getTimezoneOffset();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action(nameof(DigitalDisplaysController.UpdateAssetAssocations))',
                    dataType: 'json',
                    contentType: 'application/json',
                    data: JSON.stringify(update),
                    success: function (data, textStatus, jqXHR) {
                        if (!data.success) {
                            displayErrors('An error occurred: ' + data.message)
                        }
                        else
                        {
                            $('#toastSet').text($(tr).find('span[name="setName"]').text())
                            $('#toastSupplemental').text(data.message)
                            $('#successAlert').toast('show')
                            $(tr).find('.oc-delete-asset').removeClass('d-none')
                            $(tr).removeClass('table-warning')
                            $(button).addClass('btn-outline-secondary').removeClass('btn-outline-primary')
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        displayErrors('An error occurred - ' + textStatus + ': ' + errorThrown);
                    },
                    complete: function (jqXHR, textStatus) {
                        ResetSpinners($(button))
                        $(button).prop('disabled', false);
                    }
                })
            }
            else
            {
                displayErrors(validated);
                ResetSpinners($(button))
                $(button).prop('disabled', false);
            }
        })

        function displayErrors(errorItems) {
            $('#issueList').empty()
            if (Array.isArray(errorItems)) {
                errorItems.forEach(function (item) {
                    $('#issueList').append('<li>' + item + '</li>')
                })
            }
            else
            {
                $('#issueList').append('<li>' + errorItems + '</li>')
            }
            $('#issueModal').modal('show')
        }

        $('input[name = "startDate"]').on('change', function (event) {
            dataChanged(event)
            const startTimeField = $(event.target).parents('tr').find('input[name="startTime"]')
            if (typeof startTimeField !== undefined
                && $(startTimeField).val() === ''
                && $(event.target).val() !== '') {
                $(startTimeField).val('00:00')
            }
        })
        $('input[name = "startTime"]').on('change', dataChanged)
        $('input[name = "endDate"]').on('change', function (event) {
            dataChanged(event)
            const startTimeField = $(event.target).parents('tr').find('input[name="endTime"]')
            if (typeof startTimeField !== undefined
                && $(startTimeField).val() === ''
                && $(event.target).val() !== '') {
                $(startTimeField).val('00:00')
            }
        })
        $('input[name = "endTime"]').on('change', dataChanged)

        function dataChanged(event) {
            const tr = $(event.target).parents('tr')
            $(tr).addClass('table-warning')
            $(tr).find('button[name="save"]').addClass('btn-outline-primary').removeClass('btn-outline-secondary')
        }

        function validate(update) {
            let result = [];
            if (typeof update.StartDate === 'undefined' || update.StartDate === "") {
                result.push("You must specify a start date");
            }
            if (typeof update.StartTime === 'undefined' || update.StartTime === "") {
                result.push("You must specify a start time");
            }
            if (typeof update.EndDate === 'undefined' || update.EndDate === "") {
                result.push("You must specify an end date");
            }
            if (typeof update.EndTime === 'undefined' || update.EndTime === "") {
                result.push("You must specify an end time");
            }
            return result;
        }
    </script>
}
