@model Ocuda.Ops.Controllers.Areas.ContentManagement.ViewModels.Users.MetadataViewModel

<form>
    <div modal id="addModal" name="Metadata Type" isNonSubmit="true" type="Ocuda.Utility.TagHelpers.ModalTypes.Add">
        <input id="addName" asp-for="MetadataType.Name" formgroup autocomplete="off" />
        <select id="addPublic" asp-for="MetadataType.IsPublic" formgroup autocomplete="off">
            <option></option>
            <option value="False">No</option>
            <option value="True">Yes</option>
        </select>
    </div>
</form>

<form>
    <div modal id="editModal" name="Metadata Type" isNonSubmit="true" type="Ocuda.Utility.TagHelpers.ModalTypes.Edit">
        <input id="editId" asp-for="MetadataType.Id" type="hidden" />
        <input id="editName" asp-for="MetadataType.Name" formgroup autocomplete="off" />
        <select id="editPublic" asp-for="MetadataType.IsPublic" formgroup autocomplete="off">
            <option value="False">No</option>
            <option value="True">Yes</option>
        </select>
    </div>
</form>

<div modal id="deleteModal" name="Metadata Type" isNonSubmit="true" type="Ocuda.Utility.TagHelpers.ModalTypes.Delete">
    <input id="deleteId" asp-for="MetadataType.Id" type="hidden" />
    <input id="deleteName" asp-for="MetadataType.Name" type="hidden" />
</div>

<div class="mb-2">
    <button class="btn btn-outline-secondary text-dark"
            data-toggle="modal"
            data-target="#addModal">
        Add New Metadata Type
    </button>
</div>

@if (Model.MetadataTypes.Count() == 0)
{
    <div class="alert alert-warning">No Metadata Types Found</div>
}
else
{
    <table class="table table-sm table-bordered table-striped">
        <thead>
            <tr>
                <th>Metadata Type</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var metadataType in Model.MetadataTypes)
            {
                <tr>
                    <td>@metadataType.Name</td>
                    <td align="center">
                        <button type="button"
                                class="btn btn-info btn-xs"
                                data-toggle="modal"
                                data-target="#editModal"
                                data-id="@metadataType.Id"
                                data-name="@metadataType.Name"
                                data-public="@metadataType.IsPublic">
                            <span class="fa fa-pencil-alt" aria-hidden="true"></span>
                        </button>
                        <button type="button"
                                class="btn btn-danger btn-xs"
                                data-toggle="modal"
                                data-target="#deleteModal"
                                data-id="@metadataType.Id"
                                data-name="@metadataType.Name">
                            <span class="fa fa-times" aria-hidden="true"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @if (Model.PaginateModel.MaxPage > 1)
    {
        <paginate paginateModel="@Model.PaginateModel"></paginate>
    }
}

@section scripts {
    <script>
        var addUrl = "@Url.Action(nameof(UsersController.CreateMetadataType))";
        var editUrl = "@Url.Action(nameof(UsersController.EditMetadataType))";
        var deleteUrl = "@Url.Action(nameof(UsersController.DeleteMetadataType))";

        $("#addModal").on("click", ".modal-btn-confirm", function (e) {
            var button = $(this);
            var modal = $(e.delegateTarget);
            var name = modal.find("#addName").val();
            var isPublic = modal.find("#addPublic").val();
            $.post(addUrl, { name, isPublic }, function (response) {
                setTimeout(function () {
                    if (response.success) {
                        location.reload();
                    }
                    else {
                        ResetSpinners(button);
                        SetValidationMessage(modal.find("#addName"), response.message);
                    }
                }, 500);
            });
        });

        $("#editModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var modal = $(this);
            var id = button.data("id");
            var name = button.data("name");
            var isPublic = button.data("public");
            modal.find("#editId").val(id);
            modal.find("#editName").val(name);
            modal.find("#editPublic").val(isPublic);
        });

        $("#editModal").on("click", ".modal-btn-confirm", function (e) {
            var button = $(this);
            var modal = $(e.delegateTarget);
            var id = modal.find("#editId").val();
            var name = modal.find("#editName").val();
            var isPublic = modal.find("#editPublic").val();
            $.post(editUrl, { id, name, isPublic }, function (response) {
                setTimeout(function () {
                    if (response.success) {
                        location.reload();
                    }
                    else {
                        ResetSpinners(button);
                        SetValidationMessage(modal.find("#editName"), response.message);
                    }
                }, 500);
            });
        });

        $("#deleteModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var modal = $(this);
            var id = button.data("id");
            var name = button.data("name");
            modal.find("#deleteId").val(id);
            modal.find("#deleteName").val(name);
            modal.find(".modal-text").text("Are you sure you want to delete '" + name + "'?");
        });

        $("#deleteModal").on("click", ".modal-btn-confirm", function (e) {
            var button = $(this);
            var modal = $(e.delegateTarget);
            var id = modal.find("#deleteId").val();
            var name = modal.find("#deleteName").val();
            $.post(deleteUrl, { id, name }, function (response) {
                setTimeout(function () {
                    if (response.success) {
                        location.reload();
                    }
                    else {
                        ResetSpinners(button);
                    }
                }, 500);
            });
        });

    </script>
}
