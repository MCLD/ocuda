@model Ocuda.Ops.Controllers.Areas.ContentManagement.ViewModels.ExternalResources.IndexViewModel

<form>
    <div modal id="addModal" name="External Resource" isNonSubmit="true" type="Ocuda.Utility.TagHelpers.ModalTypes.Add">
        <input id="addName" asp-for="ExternalResource.Name" formgroup autocomplete="off" />
        <input id="addUrl" asp-for="ExternalResource.Url" formgroup autocomplete="off" />
        <select id="addType" asp-for="ExternalResource.Type" formgroup autocomplete="off">
            <option></option>
            @foreach (var resourceType in (Ocuda.Utility.Models.ExternalResourceType[])Enum.GetValues(typeof(Ocuda.Utility.Models.ExternalResourceType)))
            {
                <option value="@resourceType" selected="@(resourceType == Model.Type ? "selected" : null)">@resourceType</option>
            }    
        </select>
    </div>
</form>

<form>
    <div modal id="editModal" name="External Resource" isNonSubmit="true" type="Ocuda.Utility.TagHelpers.ModalTypes.Edit">
        <input id="editId" asp-for="ExternalResource.Id" type="hidden" />
        <input id="editName" asp-for="ExternalResource.Name" formgroup autocomplete="off" />
        <input id="editUrl" asp-for="ExternalResource.Url" formgroup autocomplete="off" />
        <select id="editType" asp-for="ExternalResource.Type" formgroup autocomplete="off" disabled="disabled">
            @foreach (var resourceType in (Ocuda.Utility.Models.ExternalResourceType[])Enum.GetValues(typeof(Ocuda.Utility.Models.ExternalResourceType)))
            {
                <option value="@resourceType" selected="@(resourceType == Model.Type ? "selected" : null)">@resourceType</option>
            }
        </select>
    </div>
</form>

<div modal id="deleteModal" name="External Resource" isNonSubmit="true" type="Ocuda.Utility.TagHelpers.ModalTypes.Delete">
    <input id="deleteId" asp-for="ExternalResource.Id" type="hidden" />
    <input id="deleteName" asp-for="ExternalResource.Name" type="hidden" />
</div>

<div class="mb-2">
    <ul class="nav nav-pills">
        @foreach (var resourceType in (Ocuda.Utility.Models.ExternalResourceType[])Enum.GetValues(typeof(Ocuda.Utility.Models.ExternalResourceType)))
        {
            <li class="nav-item">
                <a class="nav-link @(resourceType == Model.Type ? "active" : "")" asp-action="Index" asp-route-type="@resourceType">@resourceType</a>
            </li>
        }
    </ul>
</div>

<div class="mb-2">
    <button class="btn btn-outline-secondary text-dark"
            data-toggle="modal"
            data-target="#addModal">
        Add New External Resource
    </button>
</div>

@if (Model.ExternalResources.Count() == 0)
{
    <div class="alert alert-warning">No External Resources Found</div>
}
else
{
    <table class="table table-sm table-bordered table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>URL</th>
                <th>Type</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var externalResource in Model.ExternalResources)
            {
                <tr>
                    <td>@externalResource.Name</td>
                    <td>@externalResource.Url</td>
                    <td>@externalResource.Type</td>
                    <td align="center">
                        <button type="button"
                                class="btn btn-light btn-xd changeSort decreaseSortButton"
                                data-id="@externalResource.Id"
                                data-increase="false"
                                disabled="@(externalResource == Model.ExternalResources.First() ? "disabled" : null)">
                            <span class="fas fa-arrow-up"></span>
                        </button>
                        <button type="button"
                                class="btn btn-light btn-xd changeSort increaseSortButton"
                                data-id="@externalResource.Id"
                                data-increase="true"
                                disabled="@(externalResource == Model.ExternalResources.Last() ? "disabled" : null)">
                            <span class="fas fa-arrow-down"></span>
                        </button>
                        <button type="button"
                                class="btn btn-info btn-xs"
                                data-toggle="modal"
                                data-target="#editModal"
                                data-id="@externalResource.Id"
                                data-name="@externalResource.Name"
                                data-url="@externalResource.Url">
                            <span class="fa fa-pencil-alt" aria-hidden="true"></span>
                        </button>
                        <button type="button"
                                class="btn btn-danger btn-xs"
                                data-toggle="modal"
                                data-target="#deleteModal"
                                data-id="@externalResource.Id"
                                data-name="@externalResource.Name">
                            <span class="fa fa-times" aria-hidden="true"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@section scripts {
    <script>
        var addUrl = "@Url.Action(nameof(ExternalResourcesController.Create))";
        var editUrl = "@Url.Action(nameof(ExternalResourcesController.Edit))";
        var deleteUrl = "@Url.Action(nameof(ExternalResourcesController.Delete))";
        var sortUrl = "@Url.Action(nameof(ExternalResourcesController.ChangeSort))";

        var type = "@Model.Type";

        $("#addModal").on("click", ".modal-btn-confirm", function (e) {
            var button = $(this);
            var modal = $(e.delegateTarget);
            var name = modal.find("#addName").val();
            var url = modal.find("#addUrl").val();
            var type = modal.find("#addType").val();
            $.post(addUrl, { name, url, type }, function (response) {
                if (response.success) {
                    location.reload();
                }
                else {
                    ResetSpinners(button);
                    modal.find(".modal-alert").removeClass("d-none").text(response.message);
                }
            })
            .fail(function () {
                ResetSpinners(button);
                modal.find(".modal-alert").removeClass("d-none").text("An error occured when trying to add the external resource.");
            });
        });

        $("#editModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var modal = $(this);
            var id = button.data("id");
            var name = button.data("name");
            var url = button.data("url");
            modal.find("#editId").val(id);
            modal.find("#editName").val(name);
            modal.find("#editUrl").val(url);
            modal.find("#editType").val(type);
        });

        $("#editModal").on("click", ".modal-btn-confirm", function (e) {
            var button = $(this);
            var modal = $(e.delegateTarget);
            var id = modal.find("#editId").val();
            var name = modal.find("#editName").val();
            var url = modal.find("#editUrl").val();
            $.post(editUrl, { id, name, url }, function (response) {
                if (response.success) {
                    location.reload();
                }
                else {
                    //ResetSpinners(button);
                    modal.find(".modal-alert").removeClass("d-none").text(response.message);
                }
            })
            .fail(function () {
                ResetSpinners(button);
                modal.find(".modal-alert").removeClass("d-none").text("An error occured when trying to edit the external resource.");
            });
        });

        $("#deleteModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var modal = $(this);
            var id = button.data("id");
            var name = button.data("name");
            modal.find("#deleteId").val(id);
            modal.find("#deleteName").val(name);
            modal.find(".modal-text").text("Are you sure you want to delete '" + name + "'?");
        });

        $("#deleteModal").on("click", ".modal-btn-confirm", function (e) {
            var button = $(this);
            var modal = $(e.delegateTarget);
            var id = modal.find("#deleteId").val();
            var name = modal.find("#deleteName").val();
            $.post(deleteUrl, { id, name }, function (response) {
                if (response.success) {
                    location.reload();
                }
                else {
                    ResetSpinners(button);
                    modal.find(".modal-alert").removeClass("d-none").text(response.message);
                }
            })
            .fail(function () {
                ResetSpinners(button);
                modal.find(".modal-alert").removeClass("d-none").text("An error occured when trying to delete the external resource.");
            });
        });

        $(".changeSort").on("click", function () {
            var button = $(this);
            var id = button.data("id");
            var increase = button.data("increase");
            var icon = button.children("span");
            if (icon.hasClass("fa-spinner") == false) {
                icon.removeClass("fa-arrow-up fa-arrow-down").addClass("fa-spinner fa-pulse");
                $.post(sortUrl, { id, increase }, function (response) {
                    icon.removeClass("fa-spinner fa-pulse");
                    if (increase) {
                        icon.addClass("fa-arrow-down");
                    }
                    else {
                        icon.addClass("fa-arrow-up");
                    }
                    if (response.success) {
                        var row = button.parent().parent();
                        if (increase) {
                            nextRow = row.next();
                            row.insertAfter(nextRow);
                            row.find(".decreaseSortButton").removeAttr("disabled");
                            if (row.next().length == 0) {
                                row.find(".increaseSortButton").attr("disabled", "disabled");
                            }
                            nextRow.find(".increaseSortButton").removeAttr("disabled");
                            if (nextRow.prev().length == 0) {
                                nextRow.find(".decreaseSortButton").attr("disabled", "disabled");
                            }
                        }
                        else {
                            prevRow = row.prev();
                            row.insertBefore(prevRow);
                            row.find(".increaseSortButton").removeAttr("disabled");
                            if (row.prev().length == 0) {
                                row.find(".decreaseSortButton").attr("disabled", "disabled");
                            }
                            prevRow.find(".decreaseSortButton").removeAttr("disabled");
                            if (prevRow.next().length == 0) {
                                prevRow.find(".increaseSortButton").attr("disabled", "disabled");
                            }
                        }
                    }
                });
            }
        });
    </script>
}